<?xml version="1.0" encoding="UTF-8"?>
<objects name="Object Load" version="0.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<object type="MESharedData" name="">
		<object type="IssueRetreatMilAccessTickets" name="objIssues">
			<property name="strName" value="IssueRetreatMilAccessTickets"/>
			<property name="nAIPriority" value="105"/>
		</object>
		<object type="IssueDefendBorders" name="objIssues">
			<property name="strName" value="IssueDefendBordersWarThreats"/>
			<property name="nAIPriority" value="110"/>
		</object>
		<object type="IssueAirSupport" name="objIssues">
			<property name="strName" value="IssueAirSupport"/>
			<property name="nAIPriority" value="115"/>
		</object>
		<object type="IssueInvasionDetector" name="objIssues">
			<property name="strName" value="IssueInvasionDetector"/>
			<property name="nAIPriority" value="120"/>
		</object>
		<object type="IssueCoastalDefense" name="objIssues">
			<property name="strName" value="IssueCoastalDefense"/>
			<property name="nAIPriority" value="125"/>
		</object>
		<object type="IssueDefendBorders" name="objIssues">
			<property name="strName" value="IssueDefendBordersOtherThreats"/>
			<property name="nAIPriority" value="130"/>
			<property name="bWarThreatRegions" value="false"/>
		</object>
		<object type="IssueWageWar" name="objIssues">
			<property name="strName" value="IssueWageWar"/>
			<property name="nAIPriority" value="205"/>
		</object>
		<object type="IssueResetDesiredRegions" name="objIssues">
			<property name="strName" value="IssueResetDesiredRegions"/>
			<property name="nAIPriority" value="210"/>
		</object>
		<object type="IssueNavySearchAndDestroy" name="objIssues">
			<property name="strName" value="IssueNavySearchAndDestroy"/>
			<property name="nAIPriority" value="215"/>
		</object>
		<object type="IssueMaintainPowerAgainstCountries" name="objIssues">
			<property name="strName" value="IssueConquerEnemies"/>
			<property name="nAIPriority" value="220"/>
			<property name="strParameterBlock" value="BasicCountryLists"/>
			<property name="strRankedCountryList" value="Enemies"/>
		</object>
		<object type="IssueManageWarPlans" name="objIssues">
			<property name="strName" value="IssueManageWarPlans"/>
			<property name="nAIPriority" value="230"/>
		</object>
		<object type="IssueForceAllegiances" name="objIssues">
			<property name="strName" value="IssueForceAllegiances"/>
			<property name="nAIPriority" value="240"/>
		</object>
		<object type="IssueSupportAllies" name="objIssues">
			<property name="strName" value="IssueSupportAllies"/>
			<property name="nAIPriority" value="375"/>
		</object>
		<object type="IssueCaptureClaimedRegionList" name="objIssues">
			<property name="strName" value="IssueCaptureClaimedRegionList"/>
			<property name="nAIPriority" value="390"/>
			<property name="strParameterBlock" value="BasicRegionLists"/>
			<property name="strRegionList" value="Historic"/>
		</object>
		<object type="IssueUpdateEconomicPolicy" name="objIssues">
			<property name="strName" value="IssueUpdateEconomicPolicy"/>
			<property name="nAIPriority" value="890"/>
			<property name="nTreasuryPct" value="200"/>
		</object>
		<object type="IssueManageProduction" name="objIssues">
			<property name="strName" value="IssueManageProduction"/>
			<property name="nAIPriority" value="900"/>
		</object>
		<object type="IssueResetForceTargets" name="objIssues">
			<property name="strName" value="IssueResetForceTargets"/>
			<property name="nAIPriority" value="910"/>
		</object>
		<object type="IssueUpgradeResources" name="objIssues">
			<property name="strName" value="IssueUpgradeResources"/>
			<property name="nAIPriority" value="920"/>
			<property name="bUpgradeAgricultureForDomestic" value="true"/>
			<property name="bUpgradeAgricultureForMarket" value="true"/>
			<property name="nMaxFoodPctToUpgrade" value="100"/>
			<property name="nPctChanceToUpgradeFood" value="100"/>
			<property name="nMaxFoodUpgradesPerTurn" value="99"/>
		</object>
		<object type="IssueTradeGoods" name="objIssues">
			<property name="strName" value="IssueTradeGoods"/>
			<property name="nAIPriority" value="930"/>
		</object>
		<object type="IssueMakePeace" name="objIssues">
			<property name="strName" value="IssueMakePeace"/>
			<property name="nAIPriority" value="940"/>
			<property name="strParameterBlock" value="BasicCountryLists"/>
			<property name="strRankedCountryList" value="Enemies"/>
		</object>
		<object type="IssueHonorTriggerCountries" name="objIssues">
			<property name="strName" value="IssueHonorTriggerCountries"/>
			<property name="nAIPriority" value="945"/>
		</object>
		<object type="IssueBeAggressive" name="objIssues">
			<property name="strName" value="IssueBeAggressive"/>
			<property name="nAIPriority" value="950"/>
		</object>
		<object type="IssueMaintainPowerAgainstCountries" name="objIssues">
			<property name="strName" value="IssuePrepareForWars"/>
			<property name="nAIPriority" value="955"/>
			<property name="strParameterBlock" value="BasicCountryLists"/>
			<property name="strRankedCountryList" value="AITargetCountries"/>
		</object>
		<object type="IssueManageResearch" name="objIssues">
			<property name="strName" value="IssueManageResearch"/>
			<property name="nAIPriority" value="960"/>
		</object>
		<object type="IssueUpgradeInfrastructure" name="objIssues">
			<property name="strName" value="IssueUpgradeInfrastructure"/>
			<property name="nAIPriority" value="970"/>
		</object>
		<object type="IssueUnitCleanup" name="objIssues">
			<property name="strName" value="IssueUnitCleanup"/>
			<property name="nAIPriority" value="980"/>
			<property name="bPatrolAirUnits" value="false"/>
		</object>
		<object type="IssueAirOpportunisticAttack" name="objIssues">
			<property name="strName" value="IssueAirOpportunisticAttackFirstPass"/>
			<property name="nAIPriority" value="985"/>
			<property name="bReassignOrderedUnits" value="true"/>
			<property name="bAllowSplits" value="true"/>
		</object>
		<object type="IssueAirOpportunisticAttack" name="objIssues">
			<property name="strName" value="IssueAirOpportunisticAttackSecondPass"/>
			<property name="nAIPriority" value="990"/>
			<property name="bReassignOrderedUnits" value="false"/>
			<property name="bAllowSplits" value="false"/>
		</object>
		<object type="IssueMergeUnits" name="objIssues">
			<property name="strName" value="IssueMergeUnits"/>
			<property name="nAIPriority" value="995"/>
		</object>
		<object type="ProducerTemplateSet" name="objProducerTemplateSet">
			<object type="ProducerTemplate" name="objProducerTemplates">
				<property name="strResource" value="Oil"/>
				<property name="nMPUsPerBaseOutput" value="1"/>
				<property name="nMaintCostPerBaseOutput" value="20000"/>
				<property name="fMaxMaximizedOutputMultiplier" value="2.0"/>
				<property name="nMinDamagePerHit" value="3"/>
				<property name="nMaxDamagePerHit" value="3"/>
				<property name="nMinDestroyPerHit" value="1"/>
				<property name="nMaxDestroyPerHit" value="3"/>
			</object>
			<object type="ProducerTemplate" name="objProducerTemplates">
				<property name="strResource" value="Coal"/>
				<property name="nMPUsPerBaseOutput" value="1"/>
				<property name="nMaintCostPerBaseOutput" value="20000"/>
				<property name="fMaxMaximizedOutputMultiplier" value="2.0"/>
				<property name="nMinDamagePerHit" value="3"/>
				<property name="nMaxDamagePerHit" value="3"/>
				<property name="nMinDestroyPerHit" value="1"/>
				<property name="nMaxDestroyPerHit" value="3"/>
			</object>
			<object type="ProducerTemplate" name="objProducerTemplates">
				<property name="strResource" value="Metals"/>
				<property name="nMPUsPerBaseOutput" value="1"/>
				<property name="nMaintCostPerBaseOutput" value="20000"/>
				<property name="fMaxMaximizedOutputMultiplier" value="2.0"/>
				<property name="nMinDamagePerHit" value="3"/>
				<property name="nMaxDamagePerHit" value="3"/>
				<property name="nMinDestroyPerHit" value="1"/>
				<property name="nMaxDestroyPerHit" value="3"/>
			</object>
		</object>
		<object type="MilitaryPolicySet" name="objMilitaryPolicySets">
			<property name="strName" value="DefenseLow"/>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Army"/>
				<property name="nType" value="0"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_INFANTRY"/>
					<property name="nTargetPercent" value="85"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARTILLERY"/>
					<property name="nTargetPercent" value="5"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_MOBILE_INFANTRY"/>
					<property name="nTargetPercent" value="5"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARMORED"/>
					<property name="nTargetPercent" value="5"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="AirForce"/>
				<property name="nType" value="1"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_FIGHTER"/>
					<property name="nTargetPercent" value="100"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_BOMBER"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Navy"/>
				<property name="nType" value="2"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_DESTROYER"/>
					<property name="nTargetPercent" value="50"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_SUBMARINE"/>
					<property name="nTargetPercent" value="50"/>
				</object>
			</object>
		</object>
		<object type="MilitaryPolicySet" name="objMilitaryPolicySets">
			<property name="strName" value="DefenseHigh"/>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Army"/>
				<property name="nType" value="0"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_INFANTRY"/>
					<property name="nTargetPercent" value="70"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARTILLERY"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_MOBILE_INFANTRY"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARMORED"/>
					<property name="nTargetPercent" value="10"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="AirForce"/>
				<property name="nType" value="1"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_FIGHTER"/>
					<property name="nTargetPercent" value="75"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_BOMBER"/>
					<property name="nTargetPercent" value="25"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Navy"/>
				<property name="nType" value="2"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_CARRIER"/>
					<property name="nTargetPercent" value="5"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_BATTLESHIP"/>
					<property name="nTargetPercent" value="5"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_CRUISER"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_DESTROYER"/>
					<property name="nTargetPercent" value="50"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_SUBMARINE"/>
					<property name="nTargetPercent" value="30"/>
				</object>
			</object>
		</object>
		<object type="MilitaryPolicySet" name="objMilitaryPolicySets">
			<property name="strName" value="OffenseLow"/>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Army"/>
				<property name="nType" value="0"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_INFANTRY"/>
					<property name="nTargetPercent" value="50"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARTILLERY"/>
					<property name="nTargetPercent" value="20"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_MOBILE_INFANTRY"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARMORED"/>
					<property name="nTargetPercent" value="20"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="AirForce"/>
				<property name="nType" value="1"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_FIGHTER"/>
					<property name="nTargetPercent" value="60"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_BOMBER"/>
					<property name="nTargetPercent" value="40"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Navy"/>
				<property name="nType" value="2"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_CRUISER"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_DESTROYER"/>
					<property name="nTargetPercent" value="40"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_SUBMARINE"/>
					<property name="nTargetPercent" value="50"/>
				</object>
			</object>
		</object>
		<object type="MilitaryPolicySet" name="objMilitaryPolicySets">
			<property name="strName" value="OffenseHigh"/>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Army"/>
				<property name="nType" value="0"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_INFANTRY"/>
					<property name="nTargetPercent" value="45"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARTILLERY"/>
					<property name="nTargetPercent" value="20"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_MOBILE_INFANTRY"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_ARMORED"/>
					<property name="nTargetPercent" value="25"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="AirForce"/>
				<property name="nType" value="1"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_FIGHTER"/>
					<property name="nTargetPercent" value="50"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_BOMBER"/>
					<property name="nTargetPercent" value="50"/>
				</object>
			</object>
			<object type="MilitaryPolicy" name="objMilitaryPolicies">
				<property name="strName" value="Navy"/>
				<property name="nType" value="2"/>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_CARRIER"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_BATTLESHIP"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_CRUISER"/>
					<property name="nTargetPercent" value="10"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_DESTROYER"/>
					<property name="nTargetPercent" value="40"/>
				</object>
				<object type="UnitTargets" name="objUnitTargets">
					<property name="eCategory" value="UNIT_CATEGORY_SUBMARINE"/>
					<property name="nTargetPercent" value="30"/>
				</object>
			</object>
		</object>
		<object type="ProductionOutput" name="objProductionOutputs">
			<property name="strName" value="defaultArms"/>
			<property name="strOutputPath" value="objResources{Armaments}.nAmount"/>
			<property name="strDisplayName" value="Arms"/>
			<object type="ProductionInput" name="objProductionInputs">
				<property name="strName" value="Coal"/>
				<object type="ProductionElement" name="objElements">
					<property name="strStockPath" value="objResources{Coal}.nAmount"/>
					<property name="strUsingPath" value="objResources{Coal}.nUsing"/>
					<property name="strDisplayName" value="Coal"/>
				</object>
			</object>
			<object type="ProductionInput" name="objProductionInputs">
				<property name="strName" value="Oil"/>
				<object type="ProductionElement" name="objElements">
					<property name="strStockPath" value="objResources{Oil}.nAmount"/>
					<property name="strUsingPath" value="objResources{Oil}.nUsing"/>
					<property name="strDisplayName" value="Oil"/>
				</object>
			</object>
			<object type="ProductionInput" name="objProductionInputs">
				<property name="strName" value="Metals"/>
				<object type="ProductionElement" name="objElements">
					<property name="strStockPath" value="objResources{Metals}.nAmount"/>
					<property name="strUsingPath" value="objResources{Metals}.nUsing"/>
					<property name="strDisplayName" value="Metals"/>
				</object>
			</object>
		</object>
		<object type="ProductionOutput" name="objProductionOutputs">
			<property name="strName" value="defaultConsumer"/>
			<property name="strOutputPath" value="objResources{Consumer}.nAmount"/>
			<property name="strDisplayName" value="Consumer"/>
			<object type="ProductionInput" name="objProductionInputs">
				<property name="strName" value="Coal"/>
				<object type="ProductionElement" name="objElements">
					<property name="strStockPath" value="objResources{Coal}.nAmount"/>
					<property name="strUsingPath" value="objResources{Coal}.nUsing"/>
					<property name="strDisplayName" value="Coal"/>
				</object>
			</object>
			<object type="ProductionInput" name="objProductionInputs">
				<property name="strName" value="Oil"/>
				<object type="ProductionElement" name="objElements">
					<property name="strStockPath" value="objResources{Oil}.nAmount"/>
					<property name="strUsingPath" value="objResources{Oil}.nUsing"/>
					<property name="strDisplayName" value="Oil"/>
				</object>
			</object>
			<object type="ProductionInput" name="objProductionInputs">
				<property name="strName" value="Metals"/>
				<object type="ProductionElement" name="objElements">
					<property name="strStockPath" value="objResources{Metals}.nAmount"/>
					<property name="strUsingPath" value="objResources{Metals}.nUsing"/>
					<property name="strDisplayName" value="Metals"/>
				</object>
			</object>
		</object>
		<object type="HLPDefList" name="objHLPDefLists">
			<property name="strName" value="Default"/>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="EconomicStrength"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPEconomicStrength"/>
			</object>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="MilitaryPower"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPMilitaryPower"/>
			</object>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="MilAllyPower"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPMilAllyPower"/>
			</object>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="CountryScore"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPCountryScore"/>
			</object>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="MilitaryLandPower"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPMilitaryLandPower"/>
			</object>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="MilitaryAirPower"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPMilitaryAirPower"/>
			</object>
			<object type="HLPDef" name="objHLPDefs">
				<property name="strVariable" value="MilitarySeaPower"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcHLPMilitarySeaPower"/>
			</object>
		</object>
		<object type="HLPDefList" name="objHLPDefLists">
			<property name="strName" value="Playable"/>
		</object>
		<object type="PLPDefList" name="objPLPDefLists">
			<property name="strName" value="Playable"/>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntFactoryCapacity"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.nFactoryCapacity"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntFactoryOutput"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.nFactoryOutput"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntArmsImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntGoodsImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntFoodImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntArmsExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntGoodsExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntFoodExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nExported"/>
			</object>
			<object type="PLPDefMoneyProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyFloatGovernmentWealth"/>
				<property name="strPropertyPath" value="objCountry.n64GovernmentWealth"/>
			</object>
			<object type="PLPDefMoneyProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyFloatGovernmentRevenue"/>
				<property name="strPropertyPath" value="objCountry.n64GovernmentRevenue"/>
			</object>
			<object type="PLPDefMoneyProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyFloatGovernmentSpending"/>
				<property name="strPropertyPath" value="objCountry.n64GovernmentSpending"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="ResourceProduction"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPResourceProduction"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="ResourceImports"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPResourceImports"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="ResourceExports"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPResourceExports"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="TotalImports"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPTotalImports"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="TotalExports"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPTotalExports"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="CountryMPUScore"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPMPUScore"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="CountryIPUScore"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPIPUScore"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="CountryResourceScore"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPResourceScore"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="CountryFinancialScore"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPFinancialScore"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntUnskilledMPUs"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objGovData.objGroupDatas{Unskilled}.nMPUs"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntSkilledMPUs"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objGovData.objGroupDatas{Skilled}.nMPUs"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="CountryPropertyIntMilitaryMPUs"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objGovData.objGroupDatas{Military}.nMPUs"/>
			</object>
			<object type="PLPDef" name="objPLPDefs">
				<property name="strVariable" value="CountryTotalMPUs"/>
				<property name="bHistory" value="true"/>
				<property name="strCalcRtn" value="CCalcPLPTotalMPUs"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropArmamentsAmount"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nAmount"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropArmamentsDemand"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nDemand"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropArmamentsImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropArmamentsExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropArmamentsProd"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nProd"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropArmamentsUsing"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Armaments}.nUsing"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropConsumerAmount"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nAmount"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropConsumerDemand"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nDemand"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropConsumerImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropConsumerExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropConsumerProd"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nProd"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropConsumerUsing"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Consumer}.nUsing"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropFoodAmount"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nAmount"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropFoodDemand"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nDemand"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropFoodImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropFoodExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropFoodProd"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nProd"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropFoodUsing"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Food}.nUsing"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropOilAmount"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Oil}.nAmount"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropOilDemand"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Oil}.nDemand"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropOilImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Oil}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropOilExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Oil}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropOilProd"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Oil}.nProd"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropOilUsing"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Oil}.nUsing"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropCoalAmount"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Coal}.nAmount"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropCoalDemand"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Coal}.nDemand"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropCoalImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Coal}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropCoalExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Coal}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropCoalProd"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Coal}.nProd"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropCoalUsing"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Coal}.nUsing"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropMetalsAmount"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Metals}.nAmount"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropMetalsDemand"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Metals}.nDemand"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropMetalsImported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Metals}.nImported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropMetalsExported"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Metals}.nExported"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropMetalsProd"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Metals}.nProd"/>
			</object>
			<object type="PLPDefProperty" name="objPLPDefs">
				<property name="strVariable" value="ResourcePropMetalsUsing"/>
				<property name="bHistory" value="true"/>
				<property name="strPropertyPath" value="objCountry.objResources{Metals}.nUsing"/>
			</object>
		</object>
		<object type="RangeTable" name="objGroupEfficiencyTable">
		</object>
		<object type="TradeRelationsState" name="objTradeRelationsStates">
			<property name="strDisplayName" value="Normal"/>
		</object>
		<object type="TradeRelationsState" name="objTradeRelationsStates">
			<property name="eTradeRelations" value="TRADE_RELATIONS_FAVORED"/>
			<property name="strDisplayName" value="Favored"/>
			<property name="fTariffModifier" value="0.5"/>
		</object>
		<object type="TradeRelationsState" name="objTradeRelationsStates">
			<property name="eTradeRelations" value="TRADE_RELATIONS_SANCTIONED"/>
			<property name="strDisplayName" value="Sanctioned"/>
			<property name="fTariffModifier" value="2.0"/>
		</object>
		<object type="TradeRelationsState" name="objTradeRelationsStates">
			<property name="eTradeRelations" value="TRADE_RELATIONS_EMBARGOED"/>
			<property name="strDisplayName" value="Embargoed"/>
			<property name="bEmbargo" value="true"/>
		</object>
		<object type="HGoalTurnOneUnitOrder" name="objHistoricalGoals">
			<object type="IssueTurnOneUnitOrder" name="objAI">
				<property name="nAIPriority" value="10"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strUnitName" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{UnitName}.strValue"/>
				<property name="strUnitOrder" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{UnitOrder}.strValue"/>
				<property name="strOwnerName" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
				<property name="strObjectiveName" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{ObjectiveName}.strValue"/>
			</object>
		</object>
		<object type="HGoalIncMilPower" name="objHistoricalGoals">
			<object type="IssueBuildUnitsContinuously" name="objAI">
				<property name="nAIPriority" value="250"/>
			</object>
		</object>
		<object type="HGoalAcquireRegions" name="objHistoricalGoals">
			<object type="IssueCaptureRegionList" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strParameterBlock" value="BasicRegionLists"/>
				<property name="strRegionList" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{RegionList}.strValue"/>
				<property name="nGoalPriority" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objInts{GoalPriority}.nValue"/>
			</object>
		</object>
		<object type="HGoalProtectRegions" name="objHistoricalGoals">
			<object type="IssueStopExpansion" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strParameterBlock" value="BasicRegionLists"/>
				<property name="strRegionList" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{RegionList}.strValue"/>
				<property name="strTargetCountry" value=""/>
			</object>
		</object>
		<object type="HGoalKeepRegions" name="objHistoricalGoals">
		</object>
		<object type="HGoalLiberateRegions" name="objHistoricalGoals">
			<object type="IssueLiberateRegions" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strParameterBlock" value="BasicRegionLists"/>
				<property name="strRegionList" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{RegionList}.strValue"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
				<property name="nGoalPriority" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objInts{GoalPriority}.nValue"/>
			</object>
		</object>
		<object type="HGoalConquerCountry" name="objHistoricalGoals">
			<object type="IssueConquerCountry" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
				<property name="nGoalPriority" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objInts{GoalPriority}.nValue"/>
			</object>
		</object>
		<object type="HGoalLiberateCountry" name="objHistoricalGoals">
			<object type="IssueKeepCountryIndependent" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
			</object>
		</object>
		<object type="HGoalMaintainIndepend" name="objHistoricalGoals">
			<object type="IssueKeepCountryIndependent" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
			</object>
		</object>
		<object type="HGoalHelpCountryWinWar" name="objHistoricalGoals">
			<object type="IssueHelpCountryVersusEnemy" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
				<property name="strEnemyCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryBName}.strValue"/>
			</object>
		</object>
		<object type="HGoalOverpowerCountry" name="objHistoricalGoals">
			<object type="IssueBuildUnitsCountryTarget" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryBName}.strValue"/>
				<property name="objBranchNames" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarStrings{TargetBranchNames}"/>
				<property name="objBranchCounts" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarInts{TargetBranchCounts}"/>
			</object>
		</object>
		<object type="HGoalWeakenCountry" name="objHistoricalGoals">
			<object type="IssueHelpCountryVersusEnemy" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryBName}.strValue"/>
				<property name="strEnemyCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
			</object>
		</object>
		<object type="HGoalAvoidWar" name="objHistoricalGoals">
		</object>
		<object type="HGoalAvoidEntanglements" name="objHistoricalGoals">
		</object>
		<object type="HGoalFormAlliance" name="objHistoricalGoals">
			<object type="IssueAllyWithCountries" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="objCountryNames" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarStrings{TargetCountryNames}"/>
			</object>
		</object>
		<object type="HGoalAcceptAlliance" name="objHistoricalGoals">
		</object>
		<object type="HGoalFormAllianceAgainstCountry" name="objHistoricalGoals">
			<object type="IssueStrengthenAlliance" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryBName}.strValue"/>
			</object>
		</object>
		<object type="HGoalMeetResourceNeeds" name="objHistoricalGoals">
			<object type="IssueAcquireResourceNeeds" name="objAI">
				<property name="nAIPriority" value="250"/>
			</object>
		</object>
		<object type="HGoalMeetResourceProdTarget" name="objHistoricalGoals">
			<object type="IssueAcquireResourceTargets" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="objResourceNames" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarStrings{TargetResourceNames}"/>
				<property name="objResourceCounts" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarInts{TargetResourceProds}"/>
			</object>
		</object>
		<object type="HGoalIndustrialize" name="objHistoricalGoals">
		</object>
		<object type="HGoalGrowProduction" name="objHistoricalGoals">
		</object>
		<object type="HGoalIncreaseTrade" name="objHistoricalGoals">
			<object type="IssueIncreaseTrade" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="objCountryNames" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarStrings{TargetCountryNames}"/>
				<property name="objTradeVolumes" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarInts{TargetTradeVolumes}"/>
			</object>
		</object>
		<object type="HGoalIncreaseMilBranch" name="objHistoricalGoals">
			<object type="IssueBuildUnitsBranchTarget" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="objBranchNames" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarStrings{TargetBranchNames}"/>
				<property name="objBranchCounts" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarInts{TargetBranchCounts}"/>
			</object>
		</object>
		<object type="HGoalCreateTreaty" name="objHistoricalGoals">
			<object type="IssueCreateTreaty" name="objAI">
				<property name="nAIPriority" value="250"/>
				<property name="bUseScratchPad" value="true"/>
				<property name="pathInParams" value="{Object:Single:ParameterBlock}scratch.objBlock"/>
				<property name="strTargetCountry" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objStrings{CountryAName}.strValue"/>
				<property name="objTermNames" inheritFrom="{Object:Single:ParameterBlock}scratch.objBlock.objVarStrings{TargetTreatyTerms}"/>
			</object>
		</object>
		<object type="HGoalMaintainSupport" name="objHistoricalGoals">
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_ALERT_PathInvasion"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Continue"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventPathIncidentInvasion"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventPathIncidentInvasion}scratch.objPathEvent"/>
				<object type="AccessorGetUnit" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Unit}scratch.objUnit"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventPathIncidentInvasion}scratch.objPathEvent.nUnitGOID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Unit}scratch.objUnit.strOwner == {Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objDestinationRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventPathIncidentInvasion}scratch.objPathEvent.nToRegionID"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objInvadedCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventPathIncidentInvasion}scratch.objPathEvent.nInvadedCountryID"/>
				</object>
				<object type="AccessorGetAtWarCountries" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objWarCountries"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objInvadedAlliance"/>
					<property name="nAllianceID" computeFrom="if(exists({Object:Single:Country}scratch.objInvadedCountry.objAllianceRef), {Object:Single:Country}scratch.objInvadedCountry.objAllianceRef.nAllianceID, -1)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!contains(extractProperties(String, {Object:Variable:Country}scratch.objWarCountries, Country, 'strName'), {Object:Single:Country}scratch.objInvadedCountry.strName)"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.SingleTo_Aid.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
					<property name="strTemplate" computeFrom="if(exists({Object:Single:Alliance}scratch.objInvadedAlliance) AND sizeOf({Object:Single:Alliance}scratch.objInvadedAlliance.objCurrentMembers) GT 1, buildFormattedString(getFormatString(FSID.UI.DP.PathInvasion.Desc2), 'TargetName', getString({Object:Single:Country}scratch.objInvadedCountry.sidName), 'InvadedAlliance', {Object:Single:Alliance}scratch.objInvadedAlliance.strDisplayName), buildFormattedString(getFormatString(FSID.UI.DP.PathInvasion.Desc1), 'TargetName', getString({Object:Single:Country}scratch.objInvadedCountry.sidName)))"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Continue"/>
				<property name="strName" computeFrom="buildFormattedString(getFormatString(FSID.UI.DP.PathInvasion.DeclareWar), 'CountryName', getString({Object:Single:Country}scratch.objInvadedCountry.sidName))"/>
				<property name="strDescription" computeFrom="getString(SID.UI.DP.PathInvasion.Continue)"/>
				<object type="ActProposeDeclareWar" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
					<property name="strToCountry" inheritFrom="{Object:Single:Country}scratch.objInvadedCountry.strName"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Cancel"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.PathInvasion.CancelOrder)"/>
				<property name="strDescription" computeFrom="getString(SID.UI.DP.PathInvasion.Cancel)"/>
				<object type="ActCancelOrders" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventPathIncidentInvasion}scratch.objPathEvent.nUnitGOID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_PreApproval_Alliance"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposedPreApproval"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefDefensePact"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetDefenseCountries" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCreatorAllies"/>
					<property name="strCountry" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry != {Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objFromSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:Country}scratch.objCreatorAllies, Country, 'strName'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.Feedback.Generic_TreatyProposed_PreApproval_Alliance.PopOut.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.Feedback.Generic_TreatyProposed_PreApproval_Alliance.PopOut.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_PreApproval_Peace"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposedPreApproval"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefPeace"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetDefenseCountries" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCreatorAllies"/>
					<property name="strCountry" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry != {Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objFromSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:Country}scratch.objCreatorAllies, Country, 'strName'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.PreApproval_Peace.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.PreApproval_Peace.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.PreApproval_Peace.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposedPreApproval}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_Alliance"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefDefensePact"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetDefenseCountries" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!contains(extractProperties(String, {Object:Variable:Country}scratch.objAllies, Country, 'strName'), {Object:Single:TreatyDef}scratch.objTreaty.strFromCountry)"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.Feedback.Generic_TreatyProposed_SingleTo_Alliance.PopOut.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.Feedback.Generic_TreatyProposed_SingleTo_Alliance.PopOut.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_Peace"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefPeace"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.MultiTo_Peace.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_Peace.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_Peace.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_NonAggression"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefNonAggression"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.NonAggression.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
					<property name="strTemplate" value="       buildFormattedString(        getFormatString(FSID.UI.DP.NonAggression.Desc),        &apos;Creator&apos;,        getString({Object:Single:Country}scratch.objFromCountry.sidName)       )      "/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.NonAggression.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.NonAggression.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_MilAccess"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefMilitaryAccess"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.MilitaryAccess.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
					<property name="strTemplate" computeFrom="buildFormattedString(getFormatString(FSID.UI.DP.MilitaryAccess.Desc), 'Creator', getString({Object:Single:Country}scratch.objFromCountry.sidName))"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MilitaryAccess.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MilitaryAccess.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_TerritorialTransfer"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty ISA TreatyDefTerritorialTransfer"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.Feedback.Generic_TreatyProposed_SingleTo_TerritorialTransfer.PopOut.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.Feedback.Generic_TreatyProposed_SingleTo_TerritorialTransfer.PopOut.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_TradeOffer"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefTradeOffer'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.SingleTo_TradeOffer.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.SingleTo_TradeOffer.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_TradeRequest"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefTradeRequest'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.SingleTo_TradeRequest.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.SingleTo_TradeRequest.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_SingleTo_Aid"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefAid'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.SingleTo_Aid.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.SingleTo_Aid.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_MultiTo_Alliance"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefDefensePact'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) GT 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_Alliance.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_Alliance.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_MultiTo_Peace"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefPeace'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) GT 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.MultiTo_Peace.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_Peace.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_Peace.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_MultiTo_NonAggression"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefNonAggression'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) GT 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.MultiTo_NonAggression.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
					<property name="strTemplate" value="       buildFormattedString(        getFormatString(FSID.UI.DP.MultiTo_NonAggression.Desc),        &apos;Creator&apos;,        {Object:Single:Country}scratch.objCountry       )      "/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_NonAggression.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_NonAggression.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_TreatyProposed_MultiTo_MilAccess"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventTreatyProposed"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'TreatyDefMilitaryAccess'"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="cast(String, {Object:Single:TreatyDef}scratch.objTreaty.eTreatyState) == 'TREATY_PROPOSED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) GTE 1"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
					<property name="strTemplate" computeFrom="getString(SID.UI.DP.MultiTo_MilAccess.Title)"/>
				</object>
				<object type="StringFormatter" name="objDesc">
					<property name="strTemplate" value="       buildFormattedString(        getFormatString(FSID.UI.DP.MultiTo_MilAccess.Desc),        &apos;Creator&apos;,        getString({Object:Single:Country}scratch.objCountry.sidName)       )      "/>
					<object type="ArgumentList" name="objArgList">
						<property name="strName" value="AllyAtWarArgList"/>
						<object type="ArgumentElementString" name="objArgElements">
							<property name="strName" value="strCreator"/>
							<property name="strValue" computeFrom="{Object:Single:TreatyDef}scratch.objTreaty.strFromCountry"/>
						</object>
					</object>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_MilAccess.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActAcceptTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.MultiTo_MilAccess.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectTreaty" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nTreatyID" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyProposed}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="DecisionPointDef" name="objDecisionPointDefs">
			<property name="strTypeLabel" value="Generic_JoinAllianceWar"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strDefaultChoicePlayer" value="Reject"/>
			<property name="bIsAlwaysActive" value="true"/>
			<property name="bImmediate" value="true"/>
			<property name="bForAI" value="false"/>
			<object type="DPCondSetPlayEvent" name="objPlayEventConditions">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<property name="otPlayEventType" value="PlayEventJoinAllianceWar"/>
				<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nCountryID"/>
				</object>
			</object>
			<object type="DPConditionSet" name="objConditionSet">
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<property name="pathContinue" value="{bool:Single}scratch.bDPInterrupt"/>
				<object type="AccessorIsCountryPendingInWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bIsPending"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nCountryID"/>
					<property name="nWarID" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nWarID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bIsPending"/>
				</object>
			</object>
			<object type="DPDisplayFrame" name="objDisplayFrame">
				<object type="StringFormatter" name="objTitle">
				</object>
				<object type="StringFormatter" name="objDesc">
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Accept"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.JoinAllianceWar.Accept)"/>
				<property name="strDescription" value=""/>
				<object type="ActJoinAllianceWar" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nAllianceID"/>
					<property name="nWarID" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nWarID"/>
				</object>
			</object>
			<object type="DPChoice" name="objChoices">
				<property name="strKey" value="Reject"/>
				<property name="strName" computeFrom="getString(SID.UI.DP.JoinAllianceWar.Reject)"/>
				<property name="strDescription" value=""/>
				<object type="ActRejectAllianceWar" name="objActions">
					<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nAllianceID"/>
					<property name="nWarID" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nWarID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objExtraParams">
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nCountryIDTargetted"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nCountryIDTargetted"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nCountryIDDeclaring"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventJoinAllianceWar}scratch.objEvent.nCountryIDDeclaring"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC__CityNukedAIDefenderDecision__Play_Event"/>
			<property name="strTypeToTrigger" value="GENERIC__CityNukedAIDefenderDecision"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<object type="TriggerEvalUntilAnsweredPlayerDecisionThisTurn" name="objEvalRule">
				<property name="strDecisionType" value="GENERIC__CityNukedAIDefenderDecision"/>
				<property name="strChoiceLabel" value="OfferPeace"/>
			</object>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Controls City Nuked"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCityNuked"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:City}scratch.objCityNuked.nControllerID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC__Restore_Original_Capital__Play_Event"/>
			<property name="strTypeToTrigger" value="GENERIC__Restore_Original_Capital"/>
			<property name="otPlayEventType" value="PlayEventRestoredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Conquered Original Capital Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDRestorer"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nOriginalCapitalRegionID == {Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nRegionIDRestored"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC__Lost_Homeland_Crisis__Play_Event"/>
			<property name="strTypeToTrigger" value="GENERIC__Lost_Homeland_Crisis"/>
			<property name="otPlayEventType" value="PlayEventLostHomeland"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLostHomeland}scratch.objCountryEvent"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="France"/>
				<property name="strName" value="United Kingdom"/>
				<property name="strName" value="United States"/>
				<property name="strName" value="Belgium"/>
				<property name="strName" value="Netherlands"/>
				<property name="strName" value="Spain"/>
				<property name="strName" value="Portugal"/>
				<property name="strName" value="Italy"/>
				<property name="strName" value="Denmark"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Lost Homeland"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:PlayEventLostHomeland}scratch.objCountryEvent.nCountryID"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_ArgentinaAxisEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_ArgentinaAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_ArgentinaAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_ArgentinaAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Argentina"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_IraqAxisEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_IraqAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="10"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_IraqAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_IraqAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Iraq"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_HungaryAxisEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_HungaryAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_HungaryAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_HungaryAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Hungary"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_RomaniaAxisEligibilityDecision_PlayEvent_ScriptEvent_AllianceTrigger"/>
			<property name="strTypeToTrigger" value="GENERIC_RomaniaAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_RomaniaAxisEligibility_TriggerHungaryGermanyAlliance"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_RomaniaAxisEligibility_TriggerHungaryGermanyAlliance'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_RomaniaAxisEligibilityDecision_PlayEvent_ScriptEvent_WarTrigger"/>
			<property name="strTypeToTrigger" value="GENERIC_RomaniaAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_RomaniaAxisEligibility_TriggerGermanyUSSRWar"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_RomaniaAxisEligibility_TriggerGermanyUSSRWar'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_RomaniaAlliesEligibilityDecision_PlayEvent_ScriptEvent_RankTrigger"/>
			<property name="strTypeToTrigger" value="GENERIC_RomaniaAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_RomaniaAlliesEligibility_TriggerGermanyRankLoss"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_RomaniaAlliesEligibility_TriggerGermanyRankLoss'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_RomaniaAlliesEligibilityDecision_PlayEvent_ScriptEvent_WarTrigger"/>
			<property name="strTypeToTrigger" value="GENERIC_RomaniaAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_RomaniaAlliesEligibility_TriggerUSSRUKWar"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_RomaniaAlliesEligibility_TriggerUSSRUKWar'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_BulgariaAxisEligibilityDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_BulgariaAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_BulgariaAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_BulgariaAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Bulgaria"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_BulgariaAlliesEligibilityDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_BulgariaAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_BulgariaAlliesEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_BulgariaAlliesEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Bulgaria"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaAxisEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_YugoslaviaAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_YugoslaviaAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_YugoslaviaAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Yugoslavia"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaAlliesEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_YugoslaviaAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="15"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_YugoslaviaAlliesEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_YugoslaviaAlliesEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Yugoslavia"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaCoupDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_YugoslaviaCoupDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_YugoslaviaCoup"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_YugoslaviaCoup'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Yugoslavia"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaRevoltForGermanyDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_YugoslaviaRevoltForGermanyDecision"/>
			<property name="otPlayEventType" value="PlayEventPlayerDecisionAnswered"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Germany"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia BreakAlliance in YugoslaviaCoupDecision"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strTypeLabel == 'GENERIC_YugoslaviaCoupDecision'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strPlayer == 'Yugoslavia'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strChoiceSelected == 'BreakAlliance'"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FinlandAxisEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_FinlandAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_FinlandAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_FinlandAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Finland"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FinlandAlliesEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_FinlandAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_FinlandAlliesEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_FinlandAlliesEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Finland"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_SpainAxisEligibilityDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_SpainAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_SpainAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_SpainAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Spain"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_TurkeyAxisEligibilityDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_TurkeyAxisEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_TurkeyAxisEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_TurkeyAxisEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Turkey"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_TurkeyAlliesEligibilityDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_TurkeyAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_TurkeyAlliesEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_TurkeyAlliesEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Turkey"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_PortugalAlliesEligibilityDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_PortugalAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_PortugalAlliesEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_PortugalAlliesEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Portugal"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_BrazilAlliesEligibilityDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_BrazilAlliesEligibilityDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_BrazilAlliesEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_BrazilAlliesEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Brazil"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FranceLiberationDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_FranceLiberationDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_FranceLiberationEligibility"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_FranceLiberationEligibility'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="France"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FranceLiberationForUnitedKingdomDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_FranceLiberationForUnitedKingdomDecision"/>
			<property name="otPlayEventType" value="PlayEventPlayerDecisionAnswered"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="United Kingdom"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="France OfferSurrender in GENERIC_FranceLiberationDecision"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strTypeLabel == 'GENERIC_FranceLiberationDecision'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strPlayer == 'France'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strChoiceSelected == 'OfferSurrender'"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_USSRNearDefeatDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_USSRNearDefeatDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_USSRNearDefeat"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_USSRNearDefeat'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="USSR"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_ItalyNearDefeatDecision_PlayEvent_ScriptEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_ItalyNearDefeatDecision"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<object type="TriggerEvalRandomChance" name="objEvalRule">
				<property name="nPercentChance" value="25"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Scripted Event is GENERIC_ItalyNearDefeat"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_ItalyNearDefeat'"/>
					</object>
				</object>
			</object>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Italy"/>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision"/>
			<property name="otPlayEventType" value="PlayEventPlayerDecisionAnswered"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="United Kingdom"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Italy OfferSurrender in GENERIC_ItalyNearDefeatDecision"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strTypeLabel == 'GENERIC_ItalyNearDefeatDecision'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strPlayer == 'Italy'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventPlayerDecisionAnswered}scratch.objDecisionEvent.strChoiceSelected == 'OfferSurrender'"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_DemocraticLiberateCountryDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_DemocraticLiberateCountryDecision"/>
			<property name="otPlayEventType" value="PlayEventConqueredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Conqueror"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDConqueror == {Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Democratic Gov Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.strGovType == 'Democratic'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player has Independence Candidates"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objCandidates) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Conquered Region is Historic Capital Region of an Independence Candidate"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objAssociatedCandidate"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="expWhere" value="{Object}input ISA Country AND {Object}input.nOriginalCapitalRegionID == {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objAssociatedCandidate)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Conquered Region is a Non Colonial Interest"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!({Object:Single:Country}scratch.objCountry.bColonialPower AND {Object:Single:Region}scratch.objRegion.bColony)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Original Owner is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Region}scratch.objRegion.nOwnerID != {Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Original Controller is Not an Independence Candidate"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!contains(extractProperties(String, {Object:Variable:Country}scratch.objCandidates, Country, 'strName'), {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Candidate Country for Player Decision Def"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCandidateCountry"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="expWhere" value="{Object}input ISA Country AND {Object}input.nOriginalCapitalRegionID == {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCandidateCountry.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get GovType"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetGovTypeTemplate" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:GovTypeTemplate}scratch.objGovType"/>
					<property name="strGovType" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strGovType"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Candidate Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCandidateCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strName"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_CommunistLiberateCountryDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_CommunistLiberateCountryDecision"/>
			<property name="otPlayEventType" value="PlayEventConqueredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Conqueror"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDConqueror == {Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Communist Gov Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.strGovType == 'Communist'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player has Independence Candidates"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objCandidates) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Conquered Region is Historic Capital Region of an Independence Candidate"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objAssociatedCandidate"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="expWhere" value="{Object}input ISA Country AND {Object}input.nOriginalCapitalRegionID == {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objAssociatedCandidate)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Original Owner is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Region}scratch.objRegion.nOwnerID != {Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Original Controller is Not an Independence Candidate"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!contains(extractProperties(String, {Object:Variable:Country}scratch.objCandidates, Country, 'strName'), {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Candidate Country for Player Decision Def"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCandidateCountry"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="expWhere" value="{Object}input ISA Country AND {Object}input.nOriginalCapitalRegionID == {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCandidateCountry.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get GovType"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetGovTypeTemplate" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:GovTypeTemplate}scratch.objGovType"/>
					<property name="strGovType" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strGovType"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Candidate Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCandidateCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCity" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objOriginalCapital"/>
					<property name="strRegionName" inheritFrom="{Object:Single:Region}scratch.objRegion.strName"/>
					<property name="strCityName" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strOriginalCapital"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionTrigPlayEvent" name="objPlayerDecisionTriggers">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FascistLiberateCountryDecision_PlayEvent"/>
			<property name="strTypeToTrigger" value="GENERIC_FascistLiberateCountryDecision"/>
			<property name="otPlayEventType" value="PlayEventConqueredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Conqueror"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDConqueror == {Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Fascist Gov Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.strGovType == 'Fascist'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player has Independence Candidates"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objCandidates) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Conquered Region is Historic Capital Region of an Independence Candidate"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objAssociatedCandidate"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="expWhere" value="{Object}input ISA Country AND {Object}input.nOriginalCapitalRegionID == {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objAssociatedCandidate)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Original Owner is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Region}scratch.objRegion.nOwnerID != {Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Original Controller is Not an Independence Candidate"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!contains(extractProperties(String, {Object:Variable:Country}scratch.objCandidates, Country, 'strName'), {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Candidate Country for Player Decision Def"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryIndependenceCandidates" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCandidateCountry"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCandidates"/>
					<property name="expWhere" value="{Object}input ISA Country AND {Object}input.nOriginalCapitalRegionID == {Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCandidateCountry.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get GovType"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetGovTypeTemplate" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:GovTypeTemplate}scratch.objGovType"/>
					<property name="strGovType" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strGovType"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Candidate Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCandidateCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strName"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC__CityNukedAIDefenderDecision"/>
			<property name="strDefaultChoice" value="OfferPeace"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player AI Controlled"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.bAIControlled"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country Not Surrendered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryPlayer.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objPlayerWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objPlayerWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country Controls 1 or More Homeland Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryHomelandRegions" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objPlayerHomelandRegions"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objPlayerControlledHomelandRegions"/>
					<property name="pathInput" value="{Object:Variable:Region}scratch.objPlayerHomelandRegions"/>
					<property name="expWhere" value="{Object}input ISA Region AND {Object}input.nControllerID == {Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objPlayerControlledHomelandRegions) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player does Not Have Fission Bomb research completed"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetCountryResearchProjectData" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:ResearchProjectData}scratch.objResearchProjectData"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
					<property name="strProjectName" value="FissionBomb"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="(!exists({Object:Single:ResearchProjectData}scratch.objResearchProjectData.objState)) OR (cast(String, {Object:Single:ResearchProjectData}scratch.objResearchProjectData.objState.eResearchState) != 'RESEARCH_COMPLETED')"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferPeace"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" value="Insert Title Here"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" value="Insert Desc Here"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" value="Insert Effect Here"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Propose Separate Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Player Is In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) GTE 2"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get All Wars"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
							<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:War}scratch.objWars"/>
						<property name="pathSingleObject" value="{Object:Single:War}scratch.objWar"/>
						<object type="ActProposeSeparatePeaceConcessions" name="objAction">
							<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objWar.nWarID"/>
							<property name="bCedeConqueredRegions" value="true"/>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Propose Alliance Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Player Is Not In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get All Wars"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
							<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:War}scratch.objWars"/>
						<property name="pathSingleObject" value="{Object:Single:War}scratch.objWar"/>
						<object type="ActProposeAlliancePeaceConcessions" name="objAction">
							<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objWar.nWarID"/>
							<property name="bCedeConqueredRegions" value="true"/>
						</object>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" value="Insert Title Here"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" value="Insert Desc Here"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" value="Insert Effect Here"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" value="The Government Offers Unconditional Surrender"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" value="The National Government considerers surrender to avoid complete destruction by nuclear weapons"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC__Restore_Original_Capital"/>
			<property name="strDefaultChoice" value="Move"/>
			<property name="strDefaultChoicePlayer" value="Move"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Capital is Not Original Capital"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.strCapital != {Object:Single:Player}scratch.objPlayer.objCountry.strOriginalCapital"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Owns and Controls Original Capital Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nOriginalCapitalRegionID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="({Object:Single:Region}scratch.objRegion.strOwner == {Object:Single:Player}scratch.objPlayer.objCountry.strName) AND ({Object:Single:Region}scratch.objRegion.strController == {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Original Capital"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCity" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objOriginalCapital"/>
					<property name="strRegionName" inheritFrom="{Object:Single:Region}scratch.objRegion.strName"/>
					<property name="strCityName" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strOriginalCapital"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Current Capital"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCity" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCurrentCapital"/>
					<property name="strRegionName" inheritFrom="{Object:Single:Region}scratch.objRegion.strName"/>
					<property name="strCityName" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strCapital"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="Move"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Choice.Move.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Choice.Move.Desc), 'OriginalCapital', getString({Object:Single:City}scratch.objOriginalCapital.sidName))"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Choice.Move.Effect)"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Restore Original Capital"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get Original Capital"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetRegion" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
							<property name="nRegionID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nOriginalCapitalRegionID"/>
						</object>
					</object>
					<object type="ActSetNewCapital" name="objActions">
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						<property name="strCity" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strOriginalCapital"/>
						<property name="strRegion" inheritFrom="{Object:Single:Region}scratch.objRegion.strName"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="Stay"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Choice.Stay.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Choice.Stay.Desc), 'Capital', getString({Object:Single:City}scratch.objCurrentCapital.sidName))"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Choice.Stay.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Restore_Original_Capital.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC__Lost_Homeland_Crisis"/>
			<property name="strDefaultChoice" value="OfferPeace"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Owns and Controls at least 1 Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegionsOwned" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objOwnedRegions"/>
					<property name="strOwner" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="AccessorGetRegionsControlled" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objControlledRegions"/>
					<property name="strController" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="(sizeOf({Object:Variable:Region}scratch.objOwnedRegions) GTE 1) AND (sizeOf({Object:Variable:Region}scratch.objControlledRegions) GTE 1)"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferPeace"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Choice.OfferPeace.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Choice.OfferPeace.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Choice.OfferPeace.Effect)"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Propose Separate Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Player Is In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) GTE 2"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get All Wars"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
							<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:War}scratch.objWars"/>
						<property name="pathSingleObject" value="{Object:Single:War}scratch.objWar"/>
						<object type="ActProposeSeparatePeaceConcessions" name="objAction">
							<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objWar.nWarID"/>
							<property name="bCedeConqueredRegions" value="true"/>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Propose Alliance Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Player Is Not In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get All Wars"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
							<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:War}scratch.objWars"/>
						<property name="pathSingleObject" value="{Object:Single:War}scratch.objWar"/>
						<object type="ActProposeAlliancePeaceConcessions" name="objAction">
							<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objWar.nWarID"/>
							<property name="bCedeConqueredRegions" value="true"/>
						</object>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Choice.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Choice.DoNothing.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC__Lost_Homeland_Crisis.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_ArgentinaAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Argentina Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
					<property name="strCountry" value="Argentina"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryArgentina)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryArgentina.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Argentina Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
					<property name="strCountry" value="Argentina"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objArgentinaWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objArgentinaWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Argentina Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanyWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanyWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 1 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountryRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ArgentinaAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Argentina"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Argentina becomes Authoritarian"/>
					<object type="ActSetCountryGov" name="objActions">
						<property name="strCountry" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.strName"/>
						<property name="strGovType" value="Authoritarian"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Argentina becomes Expansionist"/>
					<object type="ActSetCountryInternationalPosition" name="objActions">
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
						<property name="ePosition" value="PLAYER_INTERNATIONAL_POSITION__EXPANSIONIST"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Argentina gets Aggressive Nature 4"/>
					<object type="ActSetCountryAggressiveNature" name="objActions">
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
						<property name="nAggression" value="4"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IraqAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ArgentinaAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ArgentinaAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_IraqAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Iraq Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryIraq"/>
					<property name="strCountry" value="Iraq"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryIraq)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryIraq.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Iraq Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryIraq"/>
					<property name="strCountry" value="Iraq"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objIraqWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryIraq.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objIraqWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Iraq Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanyWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanyWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 2"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountryRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IraqAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Iraq"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IraqAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IraqAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IraqAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_HungaryAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="OfferAlliance"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Hungary Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryHungary"/>
					<property name="strCountry" value="Hungary"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryHungary)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryHungary.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Hungary Not At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryHungary"/>
					<property name="strCountry" value="Hungary"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objHungaryWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryHungary.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objHungaryWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Hungary Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Poland does not Exist"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
					<property name="strCountry" value="Poland"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_HungaryAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Hungary"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_HungaryAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_HungaryAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_HungaryAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_RomaniaAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="OfferAlliance"/>
			<property name="nDefaultChoicePercent" value="50"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Romania"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_RomaniaAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="60"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Romania"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_RomaniaAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_BulgariaAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="50"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Bulgaria Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
					<property name="strCountry" value="Bulgaria"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryBulgaria)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryBulgaria.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Bulgaria Not War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
					<property name="strCountry" value="Bulgaria"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objBulgariaWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryBulgaria.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBulgariaWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Bulgaria Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Poland does not Exist"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
					<property name="strCountry" value="Poland"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Bulgaria"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_BulgariaAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Bulgaria Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
					<property name="strCountry" value="Bulgaria"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryBulgaria)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryBulgaria.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Bulgaria Not War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
					<property name="strCountry" value="Bulgaria"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objBulgariaWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryBulgaria.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBulgariaWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Bulgaria Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objBritishWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBritishWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="UK Team has Score Rank 1 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 4 or Worse"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank GTE 4"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Bulgaria"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BulgariaAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="50"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
					<property name="strCountry" value="Yugoslavia"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryYugoslavia)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryYugoslavia.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
					<property name="strCountry" value="Yugoslavia"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objYugoslaviaWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryYugoslavia.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objYugoslaviaWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Poland does not Exist"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
					<property name="strCountry" value="Poland"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Yugoslavia"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="50"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
					<property name="strCountry" value="Yugoslavia"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryYugoslavia)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryYugoslavia.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
					<property name="strCountry" value="Yugoslavia"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objYugoslaviaWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryYugoslavia.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objYugoslaviaWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objBritishWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBritishWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="British Team has Score Rank 1 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Yugoslavia"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaCoupDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="30"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Yugoslavia Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
					<property name="strCountry" value="Yugoslavia"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryYugoslavia)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryYugoslavia.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Allied with Yugoslavia"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
					<property name="strCountry" value="Yugoslavia"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bYugoslaviaGermanyAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryYugoslavia.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bYugoslaviaGermanyAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="British Team has Score Rank 3 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 3"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="BreakAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaCoupDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Break Alliance with Germany"/>
					<object type="ActCancelDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaCoupDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaCoupDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_YugoslaviaRevoltForGermanyDecision"/>
			<property name="strDefaultChoice" value="Invade"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="Invade"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Choice.Invade.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Choice.Invade.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Choice.Invade.Effect)"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Declare War on Yugoslavia"/>
					<object type="ActProposeDeclareWar" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Germany"/>
						<property name="strToCountry" value="Yugoslavia"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Choice.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Choice.DoNothing.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_YugoslaviaRevoltForGermanyDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FinlandAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="30"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Finland Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
					<property name="strCountry" value="Finland"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryFinland)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryFinland.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Finland Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
					<property name="strCountry" value="Finland"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objFinlandWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFinland.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objFinlandWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Finland Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="USSR Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
					<property name="strCountry" value="USSR"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUSSR)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUSSR.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="USSR Controls 1 or More Finnish Regions"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegionsControlled" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
					<property name="strController" value="USSR"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledFinnishRegions"/>
					<property name="pathInput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
					<property name="expWhere" value="{Object}input ISA Region AND {Object}input.strOwner == 'Finland'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objUSSRControlledFinnishRegions) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany At War with USSR"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
					<property name="strCountry" value="USSR"/>
				</object>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUSSRWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bGermanyUSSRWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Finland"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FinlandAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="40"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Finland Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
					<property name="strCountry" value="Finland"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryFinland)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryFinland.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Finland Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
					<property name="strCountry" value="Finland"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objFinlandWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFinland.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objFinlandWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Finland Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="USSR Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
					<property name="strCountry" value="USSR"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUSSR)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUSSR.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="USSR Controls 1 or More Finnish Regions"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegionsControlled" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
					<property name="strController" value="USSR"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledFinnishRegions"/>
					<property name="pathInput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
					<property name="expWhere" value="{Object}input ISA Region AND {Object}input.strOwner == 'Finland'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objUSSRControlledFinnishRegions) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom At War with USSR"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
					<property name="strCountry" value="USSR"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="British Team has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 2"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Finland"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FinlandAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_SpainAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Spain Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
					<property name="strCountry" value="Spain"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountrySpain)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountrySpain.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Spain Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
					<property name="strCountry" value="Spain"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objSpainWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountrySpain.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objSpainWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Spain Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany At War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 1 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountryRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_SpainAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Spain"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" value="getString(SID.Feedback.GENERIC_SpainAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_SpainAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_SpainAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_TurkeyAxisEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Turkey Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
					<property name="strCountry" value="Turkey"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryTurkey)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryTurkey.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Turkey Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
					<property name="strCountry" value="Turkey"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objTurkeyWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryTurkey.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objTurkeyWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Turkey Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany At War with USSR"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
					<property name="strCountry" value="USSR"/>
				</object>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUSSRWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bGermanyUSSRWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="German Team has Score Rank 1 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountryRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAxisEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to Germany"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Turkey"/>
						<property name="strToCountry" value="Germany"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAxisEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAxisEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAxisEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_TurkeyAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Turkey Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
					<property name="strCountry" value="Turkey"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryTurkey)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryTurkey.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Turkey Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
					<property name="strCountry" value="Turkey"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objTurkeyWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryTurkey.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objTurkeyWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Turkey Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom At War with USSR"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
					<property name="strCountry" value="USSR"/>
				</object>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="UK Team has Score Rank 1 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Turkey"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_TurkeyAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_PortugalAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Portugal Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPortugal"/>
					<property name="strCountry" value="Portugal"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryPortugal)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryPortugal.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Portugal Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPortugal"/>
					<property name="strCountry" value="Portugal"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objPortugalWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPortugal.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objPortugalWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Portugal Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Spain Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
					<property name="strCountry" value="Spain"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountrySpain)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountrySpain.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Allied with Spain"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
					<property name="strCountry" value="Spain"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanySpainAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountrySpain.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bGermanySpainAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom At War with Spain"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
					<property name="strCountry" value="Spain"/>
				</object>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bSpainUnitedKingdomWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountrySpain.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bSpainUnitedKingdomWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="UK Team has Score Rank 2 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 2"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_PortugalAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Portugal"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_PortugalAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_PortugalAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_PortugalAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_BrazilAlliesEligibilityDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Brazil Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBrazil"/>
					<property name="strCountry" value="Brazil"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryBrazil)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryBrazil.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Brazil Not at War"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBrazil"/>
					<property name="strCountry" value="Brazil"/>
				</object>
				<object type="AccessorGetAllCountryWars" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:War}scratch.objBrazilWars"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryBrazil.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBrazilWars) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Brazil Has 0 or Less Allies"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountryAllies" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Allied with Argentina"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
					<property name="strCountry" value="Argentina"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyArgentinaAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bGermanyArgentinaAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
					<property name="strCountry" value="Germany"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorIsAllied" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom Exists"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="United Kingdom At War with Argentina"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
					<property name="strCountry" value="Argentina"/>
				</object>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bArgentinaUnitedKingdomWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bArgentinaUnitedKingdomWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="UK Team has Score Rank 3 or Better"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
					<property name="strCountry" value="United Kingdom"/>
				</object>
				<object type="AccessorGetTeamRank" name="objAccessors">
					<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
					<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 3"/>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferAlliance"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BrazilAlliesEligibilityDecision.PopOut.Choice.OfferAlliance.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Send Alliance Offer to United Kingdom"/>
					<object type="ActProposeDefensePact" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="Brazil"/>
						<property name="strToCountry" value="United Kingdom"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BrazilAlliesEligibilityDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BrazilAlliesEligibilityDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_BrazilAlliesEligibilityDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FranceLiberationDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferSurrender"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Choice.OfferSurrender.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Choice.OfferSurrender.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Choice.OfferSurrender.Effect)"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Choice.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Choice.DoNothing.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_FranceLiberationForUnitedKingdomDecision"/>
			<property name="strDefaultChoice" value="AcceptTreaty"/>
			<property name="nDefaultChoicePercent" value="90"/>
			<property name="strDefaultChoicePlayer" value="RejectTreaty"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="AcceptTreaty"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Choice.OfferSurrender.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Choice.OfferSurrender.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Choice.OfferSurrender.Effect)"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Improve Allies Relations with France"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Setup France"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
							<property name="strCountry" value="France"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Setup Allies Countries"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAlliesCountries"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:Country}scratch.objAlliesCountries"/>
						<property name="pathSingleObject" value="{Object:Single:Country}scratch.objAlliesCountry"/>
						<object type="ActIncDipRelations" name="objAction">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objAlliesCountry.nCountryID"/>
							<property name="nTargetCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
							<property name="nAmount" value="100"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:Country}scratch.objAlliesCountries"/>
						<property name="pathSingleObject" value="{Object:Single:Country}scratch.objAlliesCountry"/>
						<object type="ActIncDipRelations" name="objAction">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
							<property name="nTargetCountryID" inheritFrom="{Object:Single:Country}scratch.objAlliesCountry.nCountryID"/>
							<property name="nAmount" value="100"/>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Form Separate Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="France Is In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
							<property name="strCountry" value="France"/>
						</object>
						<object type="AccessorGetCountryAllianceGroup" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objFrenchAllies"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objFrenchAllies) GTE 2"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="France And United Kingdom At War"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCurrentWar" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:War}scratch.objFranceUnitedKingdomWar"/>
							<property name="strCountry" value="France"/>
							<property name="strOtherCountry" value="United Kingdom"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="exists({Object:Single:War}scratch.objFranceUnitedKingdomWar)"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get United Kingdom&apos;s AI Allies"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetAlliance" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
							<property name="nAllianceID" computeFrom="{Object:Single:Player}scratch.objPlayer.objCountry.objAllianceRef.nAllianceID"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:AllianceMember}scratch.objAlliancePrincipals"/>
							<property name="pathInput" value="{Object:Single:Alliance}scratch.objAlliance.objCurrentMembers"/>
							<property name="expWhere" value="{Object}input ISA AllianceMember AND {Object}input.bPrincipal AND {Object}input.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
						</object>
						<object type="AccessorEvaluateExpression" name="objAccessors">
							<property name="pathOutput" value="{int:Variable}scratch.objAlliancePrincipalIDs"/>
							<property name="expRession" value="extractProperties(int, {Object:Variable:AllianceMember}scratch.objAlliancePrincipals, AllianceMember, 'nCountryID')"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers"/>
							<property name="pathInput" value="{Object:Single:Player}scratch.objPlayer.objGameState.objPlayers"/>
							<property name="expWhere" value="{Object}input ISA Player AND {Object}input.bAIControlled AND contains({int:Variable}scratch.objAlliancePrincipalIDs, {Object}input.objCountry.nCountryID)"/>
						</object>
					</object>
					<object type="ActDynProposeTreatyDef" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<object type="TreatyDefSeparatePeaceConcessions" name="objTreaty">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objFranceUnitedKingdomWar.nWarID"/>
							<property name="bJoinAlliance" value="true"/>
							<property name="bInstallFriendlyGovernment" value="true"/>
							<object type="TreatySigner" name="objSigners" tiedTo="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers">
								<property name="strCountry" inheritFrom="tiedTo.strName"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="France"/>
								<property name="bFromCountry" value="true"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="United Kingdom"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Form Alliance Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="France Is Not In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
							<property name="strCountry" value="France"/>
						</object>
						<object type="AccessorGetCountryAllianceGroup" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objFrenchAllies"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objFrenchAllies) LTE 1"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="France And United Kingdom At War"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCurrentWar" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:War}scratch.objFranceUnitedKingdomWar"/>
							<property name="strCountry" value="France"/>
							<property name="strOtherCountry" value="United Kingdom"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="exists({Object:Single:War}scratch.objFranceUnitedKingdomWar)"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get United Kingdom&apos;s AI Allies"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetAlliance" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
							<property name="nAllianceID" computeFrom="{Object:Single:Player}scratch.objPlayer.objCountry.objAllianceRef.nAllianceID"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:AllianceMember}scratch.objAlliancePrincipals"/>
							<property name="pathInput" value="{Object:Single:Alliance}scratch.objAlliance.objCurrentMembers"/>
							<property name="expWhere" value="{Object}input ISA AllianceMember AND {Object}input.bPrincipal AND {Object}input.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
						</object>
						<object type="AccessorEvaluateExpression" name="objAccessors">
							<property name="pathOutput" value="{int:Variable}scratch.objAlliancePrincipalIDs"/>
							<property name="expRession" value="extractProperties(int, {Object:Variable:AllianceMember}scratch.objAlliancePrincipals, AllianceMember, 'nCountryID')"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers"/>
							<property name="pathInput" value="{Object:Single:Player}scratch.objPlayer.objGameState.objPlayers"/>
							<property name="expWhere" value="{Object}input ISA Player AND {Object}input.bAIControlled AND contains({int:Variable}scratch.objAlliancePrincipalIDs, {Object}input.objCountry.nCountryID)"/>
						</object>
					</object>
					<object type="ActDynProposeTreatyDef" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<object type="TreatyDefAlliancePeaceConcessions" name="objTreaty">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objFranceUnitedKingdomWar.nWarID"/>
							<property name="bJoinAlliance" value="true"/>
							<property name="bInstallFriendlyGovernment" value="true"/>
							<object type="TreatySigner" name="objSigners" tiedTo="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers">
								<property name="strCountry" inheritFrom="tiedTo.strName"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="France"/>
								<property name="bFromCountry" value="true"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="United Kingdom"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Offer Defense Pact"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="France Not At War"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
							<property name="strCountry" value="France"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objFranceWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objFranceWars) == 0"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get United Kingdom&apos;s AI Allies"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetAlliance" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
							<property name="nAllianceID" computeFrom="{Object:Single:Player}scratch.objPlayer.objCountry.objAllianceRef.nAllianceID"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:AllianceMember}scratch.objAlliancePrincipals"/>
							<property name="pathInput" value="{Object:Single:Alliance}scratch.objAlliance.objCurrentMembers"/>
							<property name="expWhere" value="{Object}input ISA AllianceMember AND {Object}input.bPrincipal AND {Object}input.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
						</object>
						<object type="AccessorEvaluateExpression" name="objAccessors">
							<property name="pathOutput" value="{int:Variable}scratch.objAlliancePrincipalIDs"/>
							<property name="expRession" value="extractProperties(int, {Object:Variable:AllianceMember}scratch.objAlliancePrincipals, AllianceMember, 'nCountryID')"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers"/>
							<property name="pathInput" value="{Object:Single:Player}scratch.objPlayer.objGameState.objPlayers"/>
							<property name="expWhere" value="{Object}input ISA Player AND {Object}input.bAIControlled AND contains({int:Variable}scratch.objAlliancePrincipalIDs, {Object}input.objCountry.nCountryID)"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get France&apos;s AI Allies"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetAlliance" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Alliance}scratch.objFranceAlliance"/>
							<property name="nAllianceID" computeFrom="{Object:Single:Country}scratch.objCountryFrance.objAllianceRef.nAllianceID"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:AllianceMember}scratch.objFranceAlliancePrincipals"/>
							<property name="pathInput" value="{Object:Single:Alliance}scratch.objFranceAlliance.objCurrentMembers"/>
							<property name="expWhere" value="{Object}input ISA AllianceMember AND {Object}input.bPrincipal AND {Object}input.nCountryID != {Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
						</object>
						<object type="AccessorEvaluateExpression" name="objAccessors">
							<property name="pathOutput" value="{int:Variable}scratch.objFranceAlliancePrincipalIDs"/>
							<property name="expRession" value="extractProperties(int, {Object:Variable:AllianceMember}scratch.objFranceAlliancePrincipals, AllianceMember, 'nCountryID')"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Player}scratch.objFranceAlliancePrincipalPlayers"/>
							<property name="pathInput" value="{Object:Single:Player}scratch.objPlayer.objGameState.objPlayers"/>
							<property name="expWhere" value="{Object}input ISA Player AND {Object}input.bAIControlled AND contains({int:Variable}scratch.objFranceAlliancePrincipalIDs, {Object}input.objCountry.nCountryID)"/>
						</object>
					</object>
					<object type="ActDynProposeTreatyDef" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<property name="strFromCountry" value="France"/>
						<property name="strToCountry" value="United Kingdom"/>
						<object type="TreatyDefDefensePact" name="objTreaty">
							<object type="TreatySigner" name="objSigners" tiedTo="{Object:Variable:Player}scratch.objFranceAlliancePrincipalPlayers">
								<property name="strCountry" inheritFrom="tiedTo.strName"/>
								<property name="bFromCountry" value="true"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners" tiedTo="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers">
								<property name="strCountry" inheritFrom="tiedTo.strName"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="France"/>
								<property name="bFromCountry" value="true"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="United Kingdom"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
						</object>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="RejectTreaty"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Choice.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Choice.DoNothing.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FranceLiberationForUnitedKingdomDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_USSRNearDefeatDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferSurrender"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Choice.OfferSurrender.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Choice.OfferSurrender.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Choice.OfferSurrender.Effect)"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Propose Separate Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Player Is In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) GTE 2"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get All Wars"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
							<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:War}scratch.objWars"/>
						<property name="pathSingleObject" value="{Object:Single:War}scratch.objWar"/>
						<object type="ActProposeSeparatePeaceConcessions" name="objAction">
							<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objWar.nWarID"/>
							<property name="bCedeConqueredRegions" value="true"/>
							<property name="bMilitaryAccess" value="true"/>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Propose Alliance Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Player Is Not In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get All Wars"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPlayer"/>
							<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						</object>
						<object type="AccessorGetAllCountryWars" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:War}scratch.objWars"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPlayer.nCountryID"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:War}scratch.objWars"/>
						<property name="pathSingleObject" value="{Object:Single:War}scratch.objWar"/>
						<object type="ActProposeAlliancePeaceConcessions" name="objAction">
							<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objWar.nWarID"/>
							<property name="bCedeConqueredRegions" value="true"/>
							<property name="bMilitaryAccess" value="true"/>
						</object>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Choice.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Choice.DoNothing.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_USSRNearDefeatDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_ItalyNearDefeatDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="OfferSurrender"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Choice.OfferSurrender.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Choice.OfferSurrender.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Choice.OfferSurrender.Effect)"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Choice.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Choice.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Choice.DoNothing.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="strTypeLabel" value="GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision"/>
			<property name="strDefaultChoice" value="AcceptTreaty"/>
			<property name="nDefaultChoicePercent" value="90"/>
			<property name="strDefaultChoicePlayer" value="RejectTreaty"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="AcceptTreaty"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Choice.AcceptTreaty.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Choice.AcceptTreaty.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Choice.AcceptTreaty.Effect)"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Improve Allies Relations with Italy"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Setup Italy"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
							<property name="strCountry" value="Italy"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Setup Allies Countries"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountryAllies" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objAlliesCountries"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:Country}scratch.objAlliesCountries"/>
						<property name="pathSingleObject" value="{Object:Single:Country}scratch.objAlliesCountry"/>
						<object type="ActIncDipRelations" name="objAction">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objAlliesCountry.nCountryID"/>
							<property name="nTargetCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
							<property name="nAmount" value="100"/>
						</object>
					</object>
					<object type="ActActionRepeater" name="objActions">
						<property name="pathManyObjects" value="{Object:Variable:Country}scratch.objAlliesCountries"/>
						<property name="pathSingleObject" value="{Object:Single:Country}scratch.objAlliesCountry"/>
						<object type="ActIncDipRelations" name="objAction">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
							<property name="nTargetCountryID" inheritFrom="{Object:Single:Country}scratch.objAlliesCountry.nCountryID"/>
							<property name="nAmount" value="100"/>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Form Separate Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Italy Is In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
							<property name="strCountry" value="Italy"/>
						</object>
						<object type="AccessorGetCountryAllianceGroup" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objItalianAllies"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objItalianAllies) GTE 2"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get Italy United Kingdom War"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCurrentWar" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:War}scratch.objItalyUnitedKingdomWar"/>
							<property name="strCountry" value="Italy"/>
							<property name="strOtherCountry" value="United Kingdom"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get United Kingdom&apos;s AI Allies"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetAlliance" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
							<property name="nAllianceID" computeFrom="{Object:Single:Player}scratch.objPlayer.objCountry.objAllianceRef.nAllianceID"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:AllianceMember}scratch.objAlliancePrincipals"/>
							<property name="pathInput" value="{Object:Single:Alliance}scratch.objAlliance.objCurrentMembers"/>
							<property name="expWhere" value="{Object}input ISA AllianceMember AND {Object}input.bPrincipal AND {Object}input.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
						</object>
						<object type="AccessorEvaluateExpression" name="objAccessors">
							<property name="pathOutput" value="{int:Variable}scratch.objAlliancePrincipalIDs"/>
							<property name="expRession" value="extractProperties(int, {Object:Variable:AllianceMember}scratch.objAlliancePrincipals, AllianceMember, 'nCountryID')"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers"/>
							<property name="pathInput" value="{Object:Single:Player}scratch.objPlayer.objGameState.objPlayers"/>
							<property name="expWhere" value="{Object}input ISA Player AND {Object}input.bAIControlled AND contains({int:Variable}scratch.objAlliancePrincipalIDs, {Object}input.objCountry.nCountryID)"/>
						</object>
					</object>
					<object type="ActDynProposeTreatyDef" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<object type="TreatyDefSeparatePeaceConcessions" name="objTreaty">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objItalyUnitedKingdomWar.nWarID"/>
							<property name="bJoinAlliance" value="true"/>
							<property name="bInstallFriendlyGovernment" value="true"/>
							<object type="TreatySigner" name="objSigners" tiedTo="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers">
								<property name="strCountry" inheritFrom="tiedTo.strName"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="Italy"/>
								<property name="bFromCountry" value="true"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="United Kingdom"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
						</object>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Form Alliance Peace"/>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Italy Is Not In Alliance"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCountry" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
							<property name="strCountry" value="Italy"/>
						</object>
						<object type="AccessorGetCountryAllianceGroup" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Country}scratch.objItalianAllies"/>
							<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
						</object>
						<object type="RuleDefExpression" name="objRules">
							<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objItalianAllies) LTE 1"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get Italy United Kingdom War"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetCurrentWar" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:War}scratch.objItalyUnitedKingdomWar"/>
							<property name="strCountry" value="Italy"/>
							<property name="strOtherCountry" value="United Kingdom"/>
						</object>
					</object>
					<object type="AccessorRuleSet" name="objConditions">
						<property name="strDebugLabel" value="Get United Kingdom&apos;s AI Allies"/>
						<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
						<object type="AccessorGetAlliance" name="objAccessors">
							<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
							<property name="nAllianceID" computeFrom="{Object:Single:Player}scratch.objPlayer.objCountry.objAllianceRef.nAllianceID"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:AllianceMember}scratch.objAlliancePrincipals"/>
							<property name="pathInput" value="{Object:Single:Alliance}scratch.objAlliance.objCurrentMembers"/>
							<property name="expWhere" value="{Object}input ISA AllianceMember AND {Object}input.bPrincipal AND {Object}input.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
						</object>
						<object type="AccessorEvaluateExpression" name="objAccessors">
							<property name="pathOutput" value="{int:Variable}scratch.objAlliancePrincipalIDs"/>
							<property name="expRession" value="extractProperties(int, {Object:Variable:AllianceMember}scratch.objAlliancePrincipals, AllianceMember, 'nCountryID')"/>
						</object>
						<object type="AccessorSelectObjects" name="objAccessors">
							<property name="pathOutput" value="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers"/>
							<property name="pathInput" value="{Object:Single:Player}scratch.objPlayer.objGameState.objPlayers"/>
							<property name="expWhere" value="{Object}input ISA Player AND {Object}input.bAIControlled AND contains({int:Variable}scratch.objAlliancePrincipalIDs, {Object}input.objCountry.nCountryID)"/>
						</object>
					</object>
					<object type="ActDynProposeTreatyDef" name="objActions">
						<property name="strPlayer" inheritFrom="{Object:Single:Player}scratch.objPlayer.strName"/>
						<object type="TreatyDefAlliancePeaceConcessions" name="objTreaty">
							<property name="nSourceCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
							<property name="nWarID" inheritFrom="{Object:Single:War}scratch.objItalyUnitedKingdomWar.nWarID"/>
							<property name="bJoinAlliance" value="true"/>
							<property name="bInstallFriendlyGovernment" value="true"/>
							<object type="TreatySigner" name="objSigners" tiedTo="{Object:Variable:Player}scratch.objAlliancePrincipalPlayers">
								<property name="strCountry" inheritFrom="tiedTo.strName"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="Italy"/>
								<property name="bFromCountry" value="true"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
							<object type="TreatySigner" name="objSigners">
								<property name="strCountry" value="United Kingdom"/>
								<property name="bFromCountry" value="false"/>
								<property name="eTreatyState" value="TREATY_RATIFIED"/>
							</object>
						</object>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="RejectTreaty"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Choice.RejectTreaty.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Choice.RejectTreaty.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Choice.RejectTreaty.Effect)"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Title)"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ItalyNearDefeatOfferForUnitedKingdomDecision.PopOut.Desc)"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="pathTriggerProps" value="{Object:Single:Country}scratch.objCandidateCountry"/>
			<property name="strTypeLabel" value="GENERIC_DemocraticLiberateCountryDecision"/>
			<property name="strDefaultChoice" value="GrantIndependence"/>
			<property name="nDefaultChoicePercent" value="60"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="GrantIndependence"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_DemocraticLiberateCountryDecision.PopOut.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_DemocraticLiberateCountryDecision.PopOut.Desc), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName), 'CandidateCountry', getString({Object:Single:Country}scratch.objCandidateCountry.sidName))"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Grant Independence"/>
					<object type="ActGrantIndependence" name="objActions">
						<property name="strFromCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						<property name="strToCountry" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strName"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_DemocraticLiberateCountryDecision.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_DemocraticLiberateCountryDecision.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_DemocraticLiberateCountryDecision.DisplayData.Title), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName))"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_DemocraticLiberateCountryDecision.DisplayData.Desc), 'Country', getString({Object:Single:Country}scratch.objCandidateCountry.sidName))"/>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Liberate Data"/>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nCountryID"/>
					<property name="nValue" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.nCountryID"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strGovType"/>
					<property name="strValue" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strGovType"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="pathTriggerProps" value="{Object:Single:Country}scratch.objCandidateCountry"/>
			<property name="strTypeLabel" value="GENERIC_CommunistLiberateCountryDecision"/>
			<property name="strDefaultChoice" value="GrantIndependence"/>
			<property name="nDefaultChoicePercent" value="60"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="GrantIndependence"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CommunistLiberateCountryDecision.PopOut.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CommunistLiberateCountryDecision.PopOut.Desc), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName), 'CandidateCountry', getString({Object:Single:Country}scratch.objCandidateCountry.sidName))"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Grant Independence"/>
					<object type="ActGrantIndependence" name="objActions">
						<property name="strFromCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						<property name="strToCountry" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strName"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CommunistLiberateCountryDecision.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CommunistLiberateCountryDecision.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CommunistLiberateCountryDecision.DisplayData.Title), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName))"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CommunistLiberateCountryDecision.DisplayData.Desc), 'OriginalCapital', getString({Object:Single:City}scratch.objOriginalCapital.sidName), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName))"/>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Liberate Data"/>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nCountryID"/>
					<property name="nValue" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.nCountryID"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strGovType"/>
					<property name="strValue" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strGovType"/>
				</object>
			</object>
		</object>
		<object type="PlayerDecisionDef" name="objPlayerDecisionDefs">
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<property name="pathTriggerProps" value="{Object:Single:Country}scratch.objCandidateCountry"/>
			<property name="strTypeLabel" value="GENERIC_FascistLiberateCountryDecision"/>
			<property name="strDefaultChoice" value="DoNothing"/>
			<property name="nDefaultChoicePercent" value="70"/>
			<property name="strDefaultChoicePlayer" value="DoNothing"/>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="GrantIndependence"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FascistLiberateCountryDecision.PopOut.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FascistLiberateCountryDecision.PopOut.Desc), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName), 'CandidateCountry', getString({Object:Single:Country}scratch.objCandidateCountry.sidName))"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
				<object type="CustomEffectDefActions" name="objChoiceEffects">
					<property name="strLabel" value="Grant Independence"/>
					<object type="ActGrantIndependence" name="objActions">
						<property name="strFromCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
						<property name="strToCountry" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.strName"/>
					</object>
				</object>
			</object>
			<object type="PlayerDecisionChoiceDefCustom" name="objChoiceDefs">
				<property name="strLabel" value="DoNothing"/>
				<object type="ArgumentList" name="objArgLists">
					<property name="strName" value="Display Data"/>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strTitle"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FascistLiberateCountryDecision.DoNothing.Title)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strDesc"/>
						<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FascistLiberateCountryDecision.DoNothing.Desc)"/>
					</object>
					<object type="ArgumentElementString" name="objArgElements">
						<property name="strName" value="strEffect"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FascistLiberateCountryDecision.DisplayData.Title), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName))"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FascistLiberateCountryDecision.DisplayData.Desc), 'Country', getString({Object:Single:Country}scratch.objCandidateCountry.sidName))"/>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Liberate Data"/>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nCountryID"/>
					<property name="nValue" inheritFrom="{Object:Single:Country}scratch.objCandidateCountry.nCountryID"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strGovType"/>
					<property name="strValue" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strGovType"/>
				</object>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_ResearchBreakthrough"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="TriggerEvalRandomChance" name="objTriggerEval">
				<property name="nPercentChance" value="2"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="At Least 1 Active Research Project"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="AccessorGetInProgressResearchProjectDatas" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:ResearchProjectData}scratch.objResearchDatas"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:ResearchProjectData}scratch.objResearchDatas) GTE 1"/>
					</object>
				</object>
			</object>
			<object type="CustomEffectDefActions" name="objEffects">
				<property name="strLabel" value="Increase Research Points"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Project and Points"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorSelectRandomObject" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:ResearchProjectData}scratch.objResearchData"/>
						<property name="pathInput" value="{Object:Variable:ResearchProjectData}scratch.objResearchDatas"/>
					</object>
					<object type="AccessorGetRandomNumberSimple" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nPoints"/>
						<property name="nMinValue" value="1"/>
						<property name="nMaxValue" value="5"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:ResearchProjectData}scratch.objResearchData)"/>
					</object>
				</object>
				<object type="ActIncResearchProjectPoints" name="objActions">
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="strProjectName" inheritFrom="{Object:Single:ResearchProjectData}scratch.objResearchData.objState.strProjectName"/>
					<property name="nAmount" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strProjectDisplayName"/>
					<property name="strValue" computeFrom="getString({Object:Single:ResearchProjectData}scratch.objResearchData.objProject.sidDisplayName)"/>
				</object>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nPoints"/>
					<property name="nValue" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_ResearchSetback"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="TriggerEvalRandomChance" name="objTriggerEval">
				<property name="nPercentChance" value="1"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="At Least 1 Active Research Project"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="AccessorGetInProgressResearchProjectDatas" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:ResearchProjectData}scratch.objResearchDatas"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:ResearchProjectData}scratch.objResearchDatas) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Project and Points"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorSelectRandomObject" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:ResearchProjectData}scratch.objResearchData"/>
						<property name="pathInput" value="{Object:Variable:ResearchProjectData}scratch.objResearchDatas"/>
					</object>
					<object type="AccessorGetRandomNumberSimple" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nPoints"/>
						<property name="nMinValue" value="1"/>
						<property name="nMaxValue" value="3"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:ResearchProjectData}scratch.objResearchData)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:ResearchProjectData}scratch.objResearchData.objState.nResearchPoints GTE {int:Single}scratch.nPoints"/>
					</object>
				</object>
			</object>
			<object type="CustomEffectDefActions" name="objEffects">
				<property name="strLabel" value="Decrease Research Points"/>
				<object type="ActDecResearchProjectPoints" name="objActions">
					<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					<property name="strProjectName" inheritFrom="{Object:Single:ResearchProjectData}scratch.objResearchData.objState.strProjectName"/>
					<property name="nAmount" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strProjectDisplayName"/>
					<property name="strValue" computeFrom="getString({Object:Single:ResearchProjectData}scratch.objResearchData.objProject.sidDisplayName)"/>
				</object>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nPoints"/>
					<property name="nValue" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_ProducerExpand"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="TriggerEvalRandomChance" name="objTriggerEval">
				<property name="nPercentChance" value="2"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Player Controls At Least 1 Producer"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="AccessorGetAllProducers" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Producer}scratch.objProducers"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Producer}scratch.objControlledProducers"/>
						<property name="pathInput" value="{Object:Variable:Producer}scratch.objProducers"/>
						<property name="expWhere" value="{Object}input ISA Producer AND {Object}input.nControllerID == {Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
					<object type="AccessorSelectRandomObject" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Producer}scratch.objRandomProducer"/>
						<property name="pathInput" value="{Object:Variable:Producer}scratch.objControlledProducers"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Producer}scratch.objControlledProducers) GTE 1"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Producer}scratch.objRandomProducer)"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Get Region"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetRegion" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
						<property name="nRegionID" inheritFrom="{Object:Single:Producer}scratch.objRandomProducer.nRegionID"/>
					</object>
				</object>
			</object>
			<object type="CustomEffectDefActions" name="objEffects">
				<property name="strLabel" value="Increase Base Output"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Producer"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="AccessorGetAllProducers" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Producer}scratch.objProducers"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Producer}scratch.objControlledProducers"/>
						<property name="pathInput" value="{Object:Variable:Producer}scratch.objProducers"/>
						<property name="expWhere" value="{Object}input ISA Producer AND {Object}input.nControllerID == {Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Random Amount"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetRandomNumberSimple" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nPoints"/>
						<property name="nMinValue" value="2"/>
						<property name="nMaxValue" value="4"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Resource"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetResourceDisplayName" name="objAccessors">
						<property name="pathOutput" value="{String:Single}scratch.strResource"/>
						<property name="strResource" inheritFrom="{Object:Single:Producer}scratch.objRandomProducer.strResource"/>
					</object>
				</object>
				<object type="ActIncProducerBaseOutput" name="objActions">
					<property name="nGOID" inheritFrom="{Object:Single:Producer}scratch.objRandomProducer.nGameObject"/>
					<property name="nAmount" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strProducerDisplayName"/>
					<property name="strValue" computeFrom="getString({Object:Single:Region}scratch.objRegion.sidName) + ' ' + {String:Single}scratch.strResource"/>
				</object>
				<object type="ArgumentElementString" name="objArgElements">
					<property name="strName" value="strProducerType"/>
					<property name="strValue" inheritFrom="{String:Single}scratch.strResource"/>
				</object>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nPoints"/>
					<property name="nValue" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_WorkerMoraleHigh"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="TriggerEvalRandomChance" name="objTriggerEval">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Player has 75+ Food Supply Rate"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nPercentFoodSupplied GTE 75"/>
					</object>
				</object>
			</object>
			<object type="CustomEffectDefActions" name="objEffects">
				<property name="strLabel" value="Grant All City Workorders Bonus IPU"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Cities"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="AccessorGetCitiesControlled" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:City}scratch.objCities"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Random Amount"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetRandomNumberSimple" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nPoints"/>
						<property name="nMinValue" value="2"/>
						<property name="nMaxValue" value="5"/>
					</object>
				</object>
				<object type="ActActionRepeater" name="objActions">
					<property name="pathManyObjects" value="{Object:Variable:City}scratch.objCities"/>
					<property name="pathSingleObject" value="{Object:Single:City}scratch.objCity"/>
					<object type="ActAddCityWorkOrderIPUBonus" name="objAction">
						<property name="nCityGOID" inheritFrom="{Object:Single:City}scratch.objCity.nGameObject"/>
						<property name="nIPUBonus" inheritFrom="{int:Single}scratch.nPoints"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nPoints"/>
					<property name="nValue" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_WorkerMoraleLow"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenAll" name="objPlayerGen">
			</object>
			<object type="TriggerEvalRandomChance" name="objTriggerEval">
				<property name="nPercentChance" value="5"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Player has 25- Food Supply Rate"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nPercentFoodSupplied LTE 25"/>
					</object>
				</object>
			</object>
			<object type="CustomEffectDefActions" name="objEffects">
				<property name="strLabel" value="Penalize All City Workorders IPU"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Cities"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
						<property name="strCountry" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
					</object>
					<object type="AccessorGetCitiesControlled" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:City}scratch.objCities"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountry.nCountryID"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Setup Random Amount"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetRandomNumberSimple" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nPoints"/>
						<property name="nMinValue" value="2"/>
						<property name="nMaxValue" value="5"/>
					</object>
				</object>
				<object type="ActActionRepeater" name="objActions">
					<property name="pathManyObjects" value="{Object:Variable:City}scratch.objCities"/>
					<property name="pathSingleObject" value="{Object:Single:City}scratch.objCity"/>
					<object type="ActAddCityWorkOrderIPUPenalty" name="objAction">
						<property name="nCityGOID" inheritFrom="{Object:Single:City}scratch.objCity.nGameObject"/>
						<property name="nIPUPenalty" inheritFrom="{int:Single}scratch.nPoints"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
				<object type="ArgumentElementInt" name="objArgElements">
					<property name="strName" value="nPoints"/>
					<property name="nValue" inheritFrom="{int:Single}scratch.nPoints"/>
				</object>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_ArgentinaAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Argentina"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_ArgentinaAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Argentina Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
						<property name="strCountry" value="Argentina"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryArgentina)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryArgentina.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Argentina Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
						<property name="strCountry" value="Argentina"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objArgentinaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objArgentinaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Argentina Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanyWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanyWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountryRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_IraqAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Iraq"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_IraqAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Iraq Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryIraq"/>
						<property name="strCountry" value="Iraq"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryIraq)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryIraq.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Iraq Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryIraq"/>
						<property name="strCountry" value="Iraq"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objIraqWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryIraq.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objIraqWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Iraq Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanyWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanyWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountryRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_HungaryAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Hungary"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_HungaryAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Hungary Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryHungary"/>
						<property name="strCountry" value="Hungary"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryHungary)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryHungary.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Hungary Not At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryHungary"/>
						<property name="strCountry" value="Hungary"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objHungaryWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryHungary.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objHungaryWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Hungary Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Poland does not Exist"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
						<property name="strCountry" value="Poland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_RomaniaAxisEligibility_TriggerHungaryGermanyAlliance"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_RomaniaAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryRomania)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryRomania.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Poland does not Exist"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
						<property name="strCountry" value="Poland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Not War with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bRomaniaGermanyWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryRomania.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bRomaniaGermanyWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Hungary Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryHungary"/>
						<property name="strCountry" value="Hungary"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryHungary)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryHungary.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Hungary Allied with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryHungary"/>
						<property name="strCountry" value="Hungary"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bHungaryGermanyAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryHungary.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bHungaryGermanyAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_RomaniaAxisEligibility_TriggerGermanyUSSRWar"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_RomaniaAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryRomania)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryRomania.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Poland does not Exist"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
						<property name="strCountry" value="Poland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Not War with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bRomaniaGermanyWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryRomania.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bRomaniaGermanyWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUSSR)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUSSR.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany at War with USSR"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUSSRWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bGermanyUSSRWar"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_RomaniaAlliesEligibility_TriggerGermanyRankLoss"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_RomaniaAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryRomania)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryRomania.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Not At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objRomaniaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryRomania.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objRomaniaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBritishWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBritishWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nUnitedKingdomRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nUnitedKingdomRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 4 or Worse"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank GTE 4"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_RomaniaAlliesEligibility_TriggerUSSRUKWar"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Romania"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_RomaniaAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryRomania)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryRomania.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Not At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRomania"/>
						<property name="strCountry" value="Romania"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objRomaniaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryRomania.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objRomaniaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Romania Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBritishWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBritishWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nUnitedKingdomRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nUnitedKingdomRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR At War with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_BulgariaAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Bulgaria"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_BulgariaAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Bulgaria Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
						<property name="strCountry" value="Bulgaria"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryBulgaria)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryBulgaria.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Bulgaria Not War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
						<property name="strCountry" value="Bulgaria"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBulgariaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryBulgaria.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBulgariaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Bulgaria Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Poland does not Exist"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
						<property name="strCountry" value="Poland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_BulgariaAlliesEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Bulgaria"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_BulgariaAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Bulgaria Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
						<property name="strCountry" value="Bulgaria"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryBulgaria)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryBulgaria.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Bulgaria Not War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBulgaria"/>
						<property name="strCountry" value="Bulgaria"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBulgariaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryBulgaria.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBulgariaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Bulgaria Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBritishWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBritishWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="UK Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 4 or Worse"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank GTE 4"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_YugoslaviaAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Yugoslavia"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_YugoslaviaAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
						<property name="strCountry" value="Yugoslavia"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryYugoslavia)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryYugoslavia.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
						<property name="strCountry" value="Yugoslavia"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objYugoslaviaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryYugoslavia.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objYugoslaviaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Poland does not Exist"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPoland"/>
						<property name="strCountry" value="Poland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountryPoland.bSurrendered"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_YugoslaviaAlliesEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Yugoslavia"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_YugoslaviaAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
						<property name="strCountry" value="Yugoslavia"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryYugoslavia)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryYugoslavia.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
						<property name="strCountry" value="Yugoslavia"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objYugoslaviaWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryYugoslavia.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objYugoslaviaWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBritishWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBritishWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="British Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_YugoslaviaCoup"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Yugoslavia"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_YugoslaviaCoupDecision"/>
				<property name="strChoiceLabel" value="BreakAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Yugoslavia Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
						<property name="strCountry" value="Yugoslavia"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryYugoslavia)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryYugoslavia.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Allied with Yugoslavia"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryYugoslavia"/>
						<property name="strCountry" value="Yugoslavia"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bYugoslaviaGermanyAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryYugoslavia.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bYugoslaviaGermanyAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="British Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 3"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_FinlandAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Finland"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_FinlandAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Finland Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
						<property name="strCountry" value="Finland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryFinland)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryFinland.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Finland Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
						<property name="strCountry" value="Finland"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objFinlandWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFinland.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objFinlandWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Finland Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUSSR)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUSSR.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Controls 1 or More Finnish Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetRegionsControlled" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
						<property name="strController" value="USSR"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledFinnishRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.strOwner == 'Finland'"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objUSSRControlledFinnishRegions) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War with USSR"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUSSRWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bGermanyUSSRWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 3"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_FinlandAlliesEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Finland"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_FinlandAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Finland Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
						<property name="strCountry" value="Finland"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryFinland)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryFinland.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Finland Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFinland"/>
						<property name="strCountry" value="Finland"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objFinlandWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFinland.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objFinlandWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Finland Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUSSR)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUSSR.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Controls 1 or More Finnish Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetRegionsControlled" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
						<property name="strController" value="USSR"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledFinnishRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objUSSRControlledRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.strOwner == 'Finland'"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objUSSRControlledFinnishRegions) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War with USSR"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="British Team has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_SpainAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Spain"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_SpainAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Spain Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
						<property name="strCountry" value="Spain"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountrySpain)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountrySpain.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Spain Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
						<property name="strCountry" value="Spain"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objSpainWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountrySpain.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objSpainWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Spain Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objGermanWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objGermanWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountryRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_TurkeyAxisEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Turkey"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_TurkeyAxisEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Turkey Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
						<property name="strCountry" value="Turkey"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryTurkey)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryTurkey.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Turkey Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
						<property name="strCountry" value="Turkey"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objTurkeyWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryTurkey.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objTurkeyWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Turkey Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany At War with USSR"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUSSRWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bGermanyUSSRWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="German Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountryRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nGermanCountryRank"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nGermanCountryRank LTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_TurkeyAlliesEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Turkey"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_TurkeyAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Turkey Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
						<property name="strCountry" value="Turkey"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryTurkey)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryTurkey.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Turkey Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTurkey"/>
						<property name="strCountry" value="Turkey"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objTurkeyWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryTurkey.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objTurkeyWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Turkey Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War with USSR"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bUnitedKingdomUSSRWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="UK Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Not Allied with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_PortugalAlliesEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Portugal"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_PortugalAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Portugal Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPortugal"/>
						<property name="strCountry" value="Portugal"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryPortugal)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryPortugal.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Portugal Not at War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryPortugal"/>
						<property name="strCountry" value="Portugal"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objPortugalWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryPortugal.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objPortugalWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Portugal Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Spain Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
						<property name="strCountry" value="Spain"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountrySpain)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountrySpain.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Allied with Spain"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
						<property name="strCountry" value="Spain"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanySpainAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountrySpain.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bGermanySpainAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War with Spain"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySpain"/>
						<property name="strCountry" value="Spain"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bSpainUnitedKingdomWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountrySpain.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bSpainUnitedKingdomWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="UK Team has Score Rank 2 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 2"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_BrazilAlliesEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Brazil"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_BrazilAlliesEligibilityDecision"/>
				<property name="strChoiceLabel" value="OfferAlliance"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Brazil Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBrazil"/>
						<property name="strCountry" value="Brazil"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryBrazil)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryBrazil.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Brazil Not War with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryBrazil"/>
						<property name="strCountry" value="Brazil"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objBrazilWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryBrazil.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objBrazilWars) LTE 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Brazil Has 0 or Less Allies"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountryAllies" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Country}scratch.objAllies"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Country}scratch.objAllies) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Allied with Argentina"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
						<property name="strCountry" value="Argentina"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyArgentinaAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bGermanyArgentinaAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Not Allied with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{bool:Single}scratch.bGermanyUnitedKingdomAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom At War with Argentina"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryArgentina"/>
						<property name="strCountry" value="Argentina"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bArgentinaUnitedKingdomWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryArgentina.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bArgentinaUnitedKingdomWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="UK Team has Score Rank 3 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 3"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_FranceLiberationEligibility"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="France"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_FranceLiberationDecision"/>
				<property name="strChoiceLabel" value="OfferSurrender"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="France Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
						<property name="strCountry" value="France"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryFrance)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryFrance.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="France has Gov Type Fascist"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
						<property name="strCountry" value="France"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Country}scratch.objCountryFrance.strGovType == 'Fascist'"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="France Involved In At Most 1 War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
						<property name="strCountry" value="France"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objFranceWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objFranceWars) LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="France 1 War Includes United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
						<property name="strCountry" value="France"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bUnitedKingdomFranceWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bUnitedKingdomFranceWar OR sizeOf({Object:Variable:War}scratch.objFranceWars) == 0"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Controls 2 or More French Homeland Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryFrance"/>
						<property name="strCountry" value="France"/>
					</object>
					<object type="AccessorGetCountryHomelandRegions" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objFrenchHomelandRegions"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryFrance.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objBritishControlledHomelandRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objFrenchHomelandRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.nControllerID == {Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objBritishControlledHomelandRegions) GTE 2"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="UK Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_USSRNearDefeat"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="USSR"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_USSRNearDefeatDecision"/>
				<property name="strChoiceLabel" value="OfferSurrender"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR At War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objSovietWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objSovietWars) GTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR does not Control Muscovy"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorGetRegion" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Region}scratch.objRegionMuscovy"/>
						<property name="strName" value="Muscovy"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Region}scratch.objRegionMuscovy.nControllerID != {Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR does not Control 26 or More Homeland Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorGetCountryHomelandRegions" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRHomelandRegions"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objNonUSSRControlledHomelandRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objUSSRHomelandRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.nControllerID != {Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objNonUSSRControlledHomelandRegions) GTE 26"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="USSR Controls 1 or More Homeland Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUSSR"/>
						<property name="strCountry" value="USSR"/>
					</object>
					<object type="AccessorGetCountryHomelandRegions" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRHomelandRegions"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objUSSRControlledHomelandRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objUSSRHomelandRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.nControllerID == {Object:Single:Country}scratch.objCountryUSSR.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objUSSRControlledHomelandRegions) GTE 1"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="ScriptedEventDef" name="objScriptedEventDefs">
			<property name="strTypeLabel" value="GENERIC_ItalyNearDefeat"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="PlayerGenNames" name="objPlayerGen">
				<property name="strName" value="Italy"/>
			</object>
			<object type="TriggerEvalUntilAnsweredPlayerDecision" name="objTriggerEval">
				<property name="strDecisionType" value="GENERIC_ItalyNearDefeatDecision"/>
				<property name="strChoiceLabel" value="OfferSurrender"/>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Germany Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryGermany)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryGermany.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryItaly)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryItaly.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="United Kingdom Exists"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="exists({Object:Single:Country}scratch.objCountryUnitedKingdom)"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="!{Object:Single:Country}scratch.objCountryUnitedKingdom.bSurrendered"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy Allied with Germany"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryGermany"/>
						<property name="strCountry" value="Germany"/>
					</object>
					<object type="AccessorIsAllied" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bItalyGermanyAllied"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
						<property name="nAllyID" inheritFrom="{Object:Single:Country}scratch.objCountryGermany.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bItalyGermanyAllied"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy Involved in 1 War"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="AccessorGetAllCountryWars" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:War}scratch.objItalyWars"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:War}scratch.objItalyWars) == 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy At War with United Kingdom"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorIsAtWar" name="objAccessors">
						<property name="pathOutput" value="{bool:Single}scratch.bItalyUnitedKingdomWar"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
						<property name="nEnemyCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{bool:Single}scratch.bItalyUnitedKingdomWar"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="UK Team has Score Rank 1 or Better"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryUnitedKingdom"/>
						<property name="strCountry" value="United Kingdom"/>
					</object>
					<object type="AccessorGetTeamRank" name="objAccessors">
						<property name="pathOutput" value="{int:Single}scratch.nBritishRank"/>
						<property name="nTeamID" inheritFrom="{Object:Single:Country}scratch.objCountryUnitedKingdom.objTeamScoreRef.nTeamID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{int:Single}scratch.nBritishRank LTE 1"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy does not Control Lazio Umbria"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="AccessorGetRegion" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Region}scratch.objRegionLazioUmbria"/>
						<property name="strName" value="Lazio Umbria"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="{Object:Single:Region}scratch.objRegionLazioUmbria.nControllerID != {Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy does not Control 5 or More Homeland Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="AccessorGetCountryHomelandRegions" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objItalyHomelandRegions"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objNonItalyControlledHomelandRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objItalyHomelandRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.nControllerID != {Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objNonItalyControlledHomelandRegions) GTE 4"/>
					</object>
				</object>
				<object type="AccessorRuleSet" name="objConditions">
					<property name="strDebugLabel" value="Italy Controls 1 or More Homeland Regions"/>
					<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
					<object type="AccessorGetCountry" name="objAccessors">
						<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryItaly"/>
						<property name="strCountry" value="Italy"/>
					</object>
					<object type="AccessorGetCountryHomelandRegions" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objItalyHomelandRegions"/>
						<property name="nCountryID" inheritFrom="{Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
					</object>
					<object type="AccessorSelectObjects" name="objAccessors">
						<property name="pathOutput" value="{Object:Variable:Region}scratch.objItalyControlledHomelandRegions"/>
						<property name="pathInput" value="{Object:Variable:Region}scratch.objItalyHomelandRegions"/>
						<property name="expWhere" value="{Object}input ISA Region AND {Object}input.nControllerID == {Object:Single:Country}scratch.objCountryItaly.nCountryID"/>
					</object>
					<object type="RuleDefExpression" name="objRules">
						<property name="expRession" value="sizeOf({Object:Variable:Region}scratch.objItalyControlledHomelandRegions) GTE 1"/>
					</object>
				</object>
			</object>
			<object type="ArgumentList" name="objArgLists">
				<property name="strName" value="Display Data"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Full"/>
			<property name="eGraphType" value="GRAPHTYPE_FULL"/>
			<property name="nUpdateFreq" value="0"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseDistance"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Full Reversed"/>
			<property name="eGraphType" value="GRAPHTYPE_FULL_REVERSED"/>
			<property name="nUpdateFreq" value="0"/>
			<property name="bReverseEdgeStorage" value="true"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseDistance"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Land"/>
			<property name="eGraphType" value="GRAPHTYPE_LAND"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseLandDistance"/>
			</object>
			<object type="MapWeight" name="objMapWeights">
				<property name="strCalcRtn" value="CCalcMapWeightTerrain"/>
			</object>
			<object type="MapWeight" name="objMapWeights">
				<property name="strCalcRtn" value="CCalcMapWeightInfrastructure"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Sea"/>
			<property name="eGraphType" value="GRAPHTYPE_SEA"/>
			<property name="nUpdateFreq" value="0"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseSeaDistance"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Air"/>
			<property name="eGraphType" value="GRAPHTYPE_AIR"/>
			<property name="nUpdateFreq" value="0"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseDistance"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Land Reversed"/>
			<property name="eGraphType" value="GRAPHTYPE_LAND_REVERSED"/>
			<property name="bReverseEdgeStorage" value="true"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseLandDistance"/>
			</object>
			<object type="MapWeight" name="objMapWeights">
				<property name="strCalcRtn" value="CCalcMapWeightTerrain"/>
			</object>
			<object type="MapWeight" name="objMapWeights">
				<property name="strCalcRtn" value="CCalcMapWeightInfrastructure"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Sea Reversed"/>
			<property name="eGraphType" value="GRAPHTYPE_SEA_REVERSED"/>
			<property name="nUpdateFreq" value="0"/>
			<property name="bReverseEdgeStorage" value="true"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseSeaDistance"/>
			</object>
		</object>
		<object type="GraphDef" name="objGraphDefs">
			<property name="strTypeName" value="Air Reversed"/>
			<property name="eGraphType" value="GRAPHTYPE_AIR_REVERSED"/>
			<property name="nUpdateFreq" value="0"/>
			<property name="bReverseEdgeStorage" value="true"/>
			<object type="MapWeight" name="objBaseMapWeight">
				<property name="strCalcRtn" value="CCalcMapWeightBaseDistance"/>
			</object>
		</object>
		<object type="MapWeightFuncParams" name="objMapWeightFuncParams">
			<property name="nLoadTransportCost" value="1400"/>
			<property name="nUnloadTransportCost" value="1400"/>
			<property name="nTransportSpeed" value="1400"/>
		</object>
		<object type="GovTypeTemplateSet" name="objGovTypeTemplateSet">
			<object type="GovTypeTemplate" name="objGovTypeTemplates">
				<property name="strName" value="Authoritarian"/>
				<property name="strIconName" value="Authoritarian"/>
				<property name="sidDisplayName" value="SID.Game.GovTypeTemplate.Name.Authoritarian"/>
				<property name="colColor" value="#32DD12FF"/>
			</object>
			<object type="GovTypeTemplate" name="objGovTypeTemplates">
				<property name="strName" value="Fascist"/>
				<property name="strIconName" value="Fascist"/>
				<property name="sidDisplayName" value="SID.Game.GovTypeTemplate.Name.Fascist"/>
				<property name="colColor" value="#343434FF"/>
			</object>
			<object type="GovTypeTemplate" name="objGovTypeTemplates">
				<property name="strName" value="Communist"/>
				<property name="strIconName" value="Communist"/>
				<property name="sidDisplayName" value="SID.Game.GovTypeTemplate.Name.Communist"/>
				<property name="colColor" value="#AE1407FF"/>
			</object>
			<object type="GovTypeTemplate" name="objGovTypeTemplates">
				<property name="strName" value="Democratic"/>
				<property name="strIconName" value="Democratic"/>
				<property name="sidDisplayName" value="SID.Game.GovTypeTemplate.Name.Democratic"/>
				<property name="colColor" value="#1423D7FF"/>
			</object>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefDeclareWar"/>
			<property name="strTitle" value="Declare War"/>
			<property name="strDesc" value="Declare War initiates a state of war between two nations."/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefDefensePact"/>
			<property name="strTitle" value="Defense Pact"/>
			<property name="strDesc" value="A Defense Pact is a bilateral agreement. Nations that sign a Defense Pact are obligated to Declare War on countries that attack an ally."/>
			<property name="strAcceptanceCalcName" value="AcceptDefensePact"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefNonAggression"/>
			<property name="strTitle" value="Non-Aggression Pact"/>
			<property name="strDesc" value="A Non-Aggression Pact is a bilateral agreement. Nations that sign a Non-Aggression Pact are less likely to attack each other."/>
			<property name="strAcceptanceCalcName" value="AcceptNonAggression"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefAlliancePeaceEndWar"/>
			<property name="strTitle" value="Alliance Peace End War"/>
			<property name="strDesc" value="End Conflict makes peace among all nations in a conflict.  It must be ratified by the leaders of both sides of the conflict."/>
			<property name="strAcceptanceCalcName" value="AcceptAlliancePeaceEndWar"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefAlliancePeaceConcessions"/>
			<property name="strTitle" value="Alliance Peace with Concessions"/>
			<property name="strDesc" value="Offer Separate Peace will remove one nation from a conflict by breaking their alliances and making peace with the other side."/>
			<property name="strAcceptanceCalcName" value="AcceptAlliancePeaceConcessions"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefAlliancePeaceDemands"/>
			<property name="strTitle" value="Alliance Peace with Demands"/>
			<property name="strDesc" value="Offer Separate Peace will remove one nation from a conflict by breaking their alliances and making peace with the other side."/>
			<property name="strAcceptanceCalcName" value="AcceptAlliancePeaceDemands"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefSeparatePeaceEndWar"/>
			<property name="strTitle" value="Separate Peace End War"/>
			<property name="strDesc" value="End Conflict makes peace among all nations in a conflict.  It must be ratified by the leaders of both sides of the conflict."/>
			<property name="strAcceptanceCalcName" value="AcceptSeparatePeaceEndWar"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefSeparatePeaceConcessions"/>
			<property name="strTitle" value="Separate Peace with Concessions"/>
			<property name="strDesc" value="Offer Separate Peace will remove one nation from a conflict by breaking their alliances and making peace with the other side."/>
			<property name="strAcceptanceCalcName" value="AcceptSeparatePeaceConcessions"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefSeparatePeaceDemands"/>
			<property name="strTitle" value="Separate Peace with Demands"/>
			<property name="strDesc" value="Offer Separate Peace will remove one nation from a conflict by breaking their alliances and making peace with the other side."/>
			<property name="strAcceptanceCalcName" value="AcceptSeparatePeaceDemands"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefSeparatePeaceLeaveEndWar"/>
			<property name="strTitle" value="Separate Peace Leave End War"/>
			<property name="strDesc" value="End Conflict makes peace among all nations in a conflict.  It must be ratified by the leaders of both sides of the conflict."/>
			<property name="strAcceptanceCalcName" value="AcceptSeparateLeavePeaceEndWar"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefSeparatePeaceLeaveConcessions"/>
			<property name="strTitle" value="Separate Peace Leave with Concessions"/>
			<property name="strDesc" value="Offer Separate Peace will remove one nation from a conflict by breaking their alliances and making peace with the other side."/>
			<property name="strAcceptanceCalcName" value="AcceptSeparateLeavePeaceConcessions"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefSeparatePeaceLeaveDemands"/>
			<property name="strTitle" value="Separate Peace Leave with Demands"/>
			<property name="strDesc" value="Offer Separate Peace will remove one nation from a conflict by breaking their alliances and making peace with the other side."/>
			<property name="strAcceptanceCalcName" value="AcceptSeparateLeavePeaceDemands"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefTerritorialTransfer"/>
			<property name="strTitle" value="Territorial Transfer"/>
			<property name="strDesc" value="Territorial Transfer is used to offer, request or demand region transfers between nations."/>
			<property name="strAcceptanceCalcName" value="AcceptTerritorialTransfer"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefMilitaryAccess"/>
			<property name="strTitle" value="Military Access"/>
			<property name="strDesc" value="Military Access allows nations to move military forces through each others regions without causing a war."/>
			<property name="strAcceptanceCalcName" value="AcceptMilitaryAccess"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefAid"/>
			<property name="strTitle" value="Aid Treaty"/>
			<property name="strDesc" value="An Aid Treaty allows nations to offer, request, or demand uncompensated transfers of supplies &amp; money."/>
			<property name="strAcceptanceCalcName" value="AcceptAid"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefTradeDeal"/>
			<property name="strTitle" value="Trade Deal Treaty"/>
			<property name="strAcceptanceCalcName" value="AcceptTradeDeal"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefTradeOffer"/>
			<property name="strTitle" value="Trade Offer Treaty"/>
			<property name="strAcceptanceCalcName" value="AcceptTradeOffer"/>
		</object>
		<object type="TreatyDefData" name="objTreatyDefData">
			<property name="strType" value="TreatyDefTradeRequest"/>
			<property name="strTitle" value="Trade Request Treaty"/>
			<property name="strAcceptanceCalcName" value="AcceptTradeRequest"/>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="BeAggressiveDeclareNewWars"/>
			<property name="nCacheWeeks" value="0"/>
			<object type="TCCAggressionModifier" name="objConditions">
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="BeAggressiveEvaluateCountry"/>
			<property name="nCacheWeeks" value="0"/>
			<object type="TCCAtPeace" name="objConditions">
				<property name="nTrueValue" value="-75"/>
			</object>
			<object type="TCCAggressionModifier" name="objConditions">
				<property name="nMinValue" value="0"/>
			</object>
			<object type="TCCSameGovType" name="objConditions">
				<property name="nTrueValue" value="-30"/>
			</object>
			<object type="TCCRiskModifier" name="objConditions">
				<property name="nScale" value="60"/>
				<property name="nOffset" value="-30"/>
				<property name="nMinValue" value="-30"/>
				<property name="nMaxValue" value="30"/>
			</object>
			<object type="TCCHaveNonAggression" name="objConditions">
				<property name="nTrueValue" value="-10"/>
			</object>
			<object type="TCCAlliancePowerVsIncludingWars" name="objConditions">
				<property name="nMinValue" value="-40"/>
				<property name="nMaxValue" value="0"/>
			</object>
			<object type="TCCOtherUnrelatedWar" name="objConditions">
				<property name="nTrueValue" value="20"/>
			</object>
			<object type="TCCGoalBonus" name="objConditions">
				<property name="nTrueValue" value="20"/>
			</object>
			<object type="TCCCapitalDistance" name="objConditions">
				<property name="nFarValue" value="-40"/>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="BeAggressiveEvaluateCapability"/>
			<property name="nCacheWeeks" value="0"/>
			<object type="TCCConditionExceedsThreshold" name="objConditions">
				<property name="strName" value="Military power exceeds 60%"/>
				<property name="nTrueValue" value="50"/>
				<property name="nFalseValue" value="-50"/>
				<property name="nThreshold" value="20"/>
				<object type="TCCMilPowerVsCountry" name="objCondition">
				</object>
			</object>
			<object type="TCCConditionExceedsThreshold" name="objConditions">
				<property name="strName" value="Alliance power (including wars) exceeds 40%"/>
				<property name="nTrueValue" value="50"/>
				<property name="nFalseValue" value="-50"/>
				<property name="nThreshold" value="-20"/>
				<object type="TCCAlliancePowerVsIncludingWars" name="objCondition">
				</object>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="ShouldComplyWithDefensePact"/>
			<object type="TCCAtPeace" name="objConditions">
				<property name="nTrueValue" value="-75"/>
			</object>
			<object type="TCCComplyingWithDefensePact" name="objConditions">
				<property name="nTrueValue" value="100"/>
			</object>
			<object type="TCCAggressionModifier" name="objConditions">
				<property name="nMinValue" value="0"/>
			</object>
			<object type="TCCRiskModifier" name="objConditions">
				<property name="nScale" value="60"/>
				<property name="nOffset" value="-30"/>
				<property name="nMinValue" value="-30"/>
				<property name="nMaxValue" value="30"/>
			</object>
			<object type="TCCAlliancePowerVsThreatsToOther" name="objConditions">
				<property name="nMinValue" value="-50"/>
				<property name="nMaxValue" value="0"/>
			</object>
			<object type="TCCAlliancePowerVsThreats" name="objConditions">
				<property name="nScale" value="-100"/>
				<property name="nMinValue" value="0"/>
				<property name="nMaxValue" value="50"/>
			</object>
			<object type="TCCGoalBonus" name="objConditions">
				<property name="nTrueValue" value="20"/>
			</object>
		</object>
		<object type="TreatyCalcRiskThreshold" name="objTreatyCalcs">
			<property name="strName" value="AcceptDefensePact"/>
			<property name="nThreshold" value="1"/>
			<object type="TCCIsDesiredAlly" name="objConditions">
				<property name="nTrueValue" value="500"/>
			</object>
			<object type="TCCEstimatedAlliancePower" name="objConditions">
				<property name="nLowThreshold" value="125"/>
				<property name="nHighThreshold" value="125"/>
				<property name="nLowValue" value="-100"/>
			</object>
			<object type="TCCIntimidationFactor" name="objConditions">
				<property name="nScale" value="50"/>
				<property name="nMinValue" value="0"/>
			</object>
			<object type="TCCAlliancePowerVsThreats" name="objConditions">
				<property name="nScale" value="-100"/>
				<property name="nMinValue" value="0"/>
				<property name="nMaxValue" value="25"/>
			</object>
			<object type="TCCAtWar" name="objConditions">
				<property name="nTrueValue" value="50"/>
			</object>
			<object type="TCCOtherAtWar" name="objConditions">
				<property name="nTrueValue" value="-50"/>
			</object>
			<object type="TCCAlliancePowerVsThreatsToOther" name="objConditions">
				<property name="nMinValue" value="-50"/>
				<property name="nMaxValue" value="0"/>
			</object>
			<object type="TCCSameGovType" name="objConditions">
				<property name="nTrueValue" value="50"/>
				<property name="nFalseValue" value="-50"/>
			</object>
			<object type="TCCCapitalDistance" name="objConditions">
				<property name="nMediumValue" value="-25"/>
				<property name="nFarValue" value="-50"/>
			</object>
			<object type="TCCRiskModifier" name="objConditions">
				<property name="nScale" value="50"/>
				<property name="nOffset" value="-25"/>
				<property name="nMinValue" value="-25"/>
				<property name="nMaxValue" value="25"/>
			</object>
			<object type="TCCHaveCommonAlly" name="objConditions">
				<property name="nTrueValue" value="10"/>
			</object>
			<object type="TCCHaveCommonEnemy" name="objConditions">
				<property name="nTrueValue" value="10"/>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="AcceptAid"/>
			<object type="TCCSameGovType" name="objConditions">
				<property name="nTrueValue" value="30"/>
			</object>
			<object type="TCCAreAllies" name="objConditions">
				<property name="nTrueValue" value="30"/>
			</object>
			<object type="TCCAtWar" name="objConditions">
				<property name="nTrueValue" value="-10"/>
			</object>
			<object type="TCCRequestedResourcesAvailable" name="objConditions">
				<property name="nTrueValue" value="5"/>
				<property name="nFalseValue" value="-200"/>
			</object>
			<object type="TCCOfferedResourcesNeeded" name="objConditions">
				<property name="nLowDemandValue" value="100"/>
				<property name="nMediumDemandValue" value="100"/>
				<property name="nHighDemandValue" value="100"/>
				<property name="nMaxValue" value="100"/>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="AcceptMilitaryAccess"/>
			<object type="TCCDemand" name="objConditions">
				<property name="nTrueValue" value="30"/>
			</object>
			<object type="TCCSameGovType" name="objConditions">
				<property name="nTrueValue" value="30"/>
				<property name="nFalseValue" value="-30"/>
			</object>
			<object type="TCCOtherUnrelatedWar" name="objConditions">
				<property name="nTrueValue" value="-20"/>
			</object>
			<object type="TCCOtherRelatedWar" name="objConditions">
				<property name="nTrueValue" value="50"/>
			</object>
			<object type="TCCCapitalDistance" name="objConditions">
				<property name="nNearValue" value="10"/>
				<property name="nFarValue" value="-10"/>
			</object>
			<object type="TCCRiskModifier" name="objConditions">
				<property name="nScale" value="200"/>
				<property name="nOffset" value="-100"/>
			</object>
			<object type="TCCMilPowerVsCountry" name="objConditions">
				<property name="nScale" value="-100"/>
				<property name="nMinValue" value="-20"/>
				<property name="nMaxValue" value="20"/>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="AcceptNonAggression"/>
			<object type="TCCAtWar" name="objConditions">
				<property name="nTrueValue" value="50"/>
			</object>
			<object type="TCCOtherAtWar" name="objConditions">
				<property name="nTrueValue" value="-20"/>
			</object>
			<object type="TCCCapitalDistance" name="objConditions">
				<property name="nNearValue" value="20"/>
				<property name="nFarValue" value="-20"/>
			</object>
			<object type="TCCMilPowerVsCountry" name="objConditions">
				<property name="nScale" value="-100"/>
				<property name="nMinValue" value="0"/>
				<property name="nMaxValue" value="20"/>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="AcceptTerritorialTransfer"/>
			<object type="TCCDemand" name="objConditions">
				<property name="nTrueValue" value="60"/>
			</object>
			<object type="TCCSameGovType" name="objConditions">
				<property name="nFalseValue" value="-50"/>
			</object>
			<object type="TCCOfferedRegions" name="objConditions">
				<property name="nContiguousValue" value="20"/>
				<property name="nHomeValue" value="100"/>
				<property name="nColonyValue" value="50"/>
			</object>
			<object type="TCCRequestedRegions" name="objConditions">
				<property name="nContiguousValue" value="-20"/>
				<property name="nHomeValue" value="-180"/>
				<property name="nColonyValue" value="-55"/>
			</object>
		</object>
		<object type="TreatyCalcConditionList" name="objTreatyCalcs">
			<property name="strName" value="AcceptTradeDeal"/>
			<object type="TCCDemand" name="objConditions">
				<property name="nTrueValue" value="10"/>
			</object>
			<object type="TCCSameGovType" name="objConditions">
				<property name="nTrueValue" value="10"/>
			</object>
			<object type="TCCAreAllies" name="objConditions">
				<property name="nTrueValue" value="40"/>
			</object>
			<object type="TCCRequestedResourcesAvailable" name="objConditions">
				<property name="nTrueValue" value="50"/>
				<property name="nFalseValue" value="-200"/>
			</object>
			<object type="TCCOfferedResourcesNeeded" name="objConditions">
				<property name="nNoDemandValue" value="-60"/>
				<property name="nLowDemandValue" value="20"/>
				<property name="nMediumDemandValue" value="30"/>
				<property name="nHighDemandValue" value="40"/>
				<property name="nMinValue" value="-60"/>
				<property name="nMaxValue" value="40"/>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LeaveAlliance_PlayerAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Leaving Alliance"/>
			<property name="otPlayEventType" value="PlayEventLeaveAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is not Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_LeaveAlliance_PlayerAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LeaveAlliance_PlayerAlliance.PopOut.Desc), 'CountryLeaving', getString({Object:Single:Country}scratch.objCountry.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LeaveAlliance_PlayerWarWithAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Leaving Alliance"/>
			<property name="otPlayEventType" value="PlayEventLeaveAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player at War with Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWarWithAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceWar"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_LeaveAlliance_PlayerWarWithAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LeaveAlliance_PlayerWarWithAlliance.PopOut.Desc), 'CountryLeaving', getString({Object:Single:Country}scratch.objCountry.sidName), 'AllianceName', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LeaveAlliance_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Leaving Alliance"/>
			<property name="otPlayEventType" value="PlayEventLeaveAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not at War with Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWarWithAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceWar"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_LeaveAlliance_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LeaveAlliance_Other.PopOut.Desc), 'CountryLeaving', getString({Object:Single:Country}scratch.objCountry.sidName), 'AllianceName', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LeaveAlliance_PlayerCountry"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Leaving Alliance"/>
			<property name="otPlayEventType" value="PlayEventLeaveAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_LeaveAlliance_PlayerCountry.End_of_Turn.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LeaveAlliance_PlayerAlliance"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Leaving Alliance"/>
			<property name="otPlayEventType" value="PlayEventLeaveAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LeaveAlliance_PlayerAlliance.End_of_Turn.Title), 'CountryName', getString({Object:Single:Country}scratch.objCountry.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LeaveAlliance_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Leaving Alliance"/>
			<property name="otPlayEventType" value="PlayEventLeaveAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventLeaveAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LeaveAlliance_Other.End_of_Turn.Title), 'CountryName', getString({Object:Single:Country}scratch.objCountry.sidName), 'AllianceName', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToCountry_PlayerTargetted"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareCountryToCountry_PlayerTargetted.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToCountry_PlayerTargetted.PopOut.Desc), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToCountry_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareCountryToCountry_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToCountry_Other.PopOut.Desc), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToCountry_PlayerDeclaring"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToCountry_PlayerDeclaring.End_of_Turn.Title), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToCountry_PlayerTargetted"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToCountry_PlayerTargetted.End_of_Turn.Title), 'CountryDeclaringName', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToCountry_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToCountry_Other.End_of_Turn.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToAlliance_PlayerAllianceTargetted"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareAllianceToAlliance_PlayerAllianceTargetted.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToAlliance_PlayerAllianceTargetted.PopOut.Desc), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToAlliance_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareAllianceToAlliance_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToAlliance_Other.PopOut.Desc), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName, 'AllianceTargetted', {Object:Single:Alliance}scratch.objAllianceTargetted.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToAlliance_PlayerAllianceDeclaring"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.FSID.Feedback.GENERIC_WarDeclareAllianceToAlliance_Other.End_of_Turn.Title.End_of_Turn.Title), 'AllianceTargetted', {Object:Single:Alliance}scratch.objAllianceTargetted.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToAlliance_PlayerAllianceTargetted"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToAlliance_PlayerAllianceTargetted.End_of_Turn.Title), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToAlliance_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToAlliance_Other.End_of_Turn.Title), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName, 'AllianceTargetted', {Object:Single:Alliance}scratch.objAllianceTargetted.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToCountry_PlayerTargetted"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareAllianceToCountry_PlayerTargetted.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToCountry_PlayerTargetted.PopOut.Title), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToCountry_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareAllianceToCountry_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToCountry_Other.PopOut.Title), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName, 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToCountry_PlayerAllianceDeclaring"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToCountry_PlayerAllianceDeclaring.End_of_Turn.Title), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToCountry_PlayerTargetted"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToCountry_PlayerTargetted.End_of_Turn.Title), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareAllianceToCountry_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareAllianceToCountry"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceDeclaring"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nAllianceIDDeclaring"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareAllianceToCountry}scratch.objWarEvent.nCountryIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareAllianceToCountry_Other.End_of_Turn.Title), 'AllianceDeclaring', {Object:Single:Alliance}scratch.objAllianceDeclaring.strDisplayName, 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToAlliance_PlayerAllianceTargetted"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareCountryToAlliance_PlayerAllianceTargetted.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToAlliance_PlayerAllianceTargetted.PopOut.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToAlliance_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WarDeclareCountryToAlliance_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToAlliance_Other.PopOut.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'AllianceTargetted', {Object:Single:Alliance}scratch.objAllianceTargetted.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToAlliance_PlayerDeclaring"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Is Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToAlliance_PlayerDeclaring.End_of_Turn.Title), 'AllianceTargetted', {Object:Single:Alliance}scratch.objAllianceTargetted.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToAlliance_PlayerAllianceTargetted"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToAlliance_PlayerAllianceTargetted.End_of_Turn.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WarDeclareCountryToAlliance_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC War Starting"/>
			<property name="otPlayEventType" value="PlayEventWarDeclareCountryToAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nCountryIDDeclaring"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceTargetted"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventWarDeclareCountryToAlliance}scratch.objWarEvent.nAllianceIDTargetted"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceTargetted"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_WarDeclareCountryToAlliance_Other.End_of_Turn.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'AllianceTargetted', {Object:Single:Alliance}scratch.objAllianceTargetted.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_FormAlliance_Personal"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Alliance Forming"/>
			<property name="otPlayEventType" value="PlayEventFormAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country A or Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="({Object:Single:Country}scratch.objCountryA.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID) OR ({Object:Single:Country}scratch.objCountryB.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FormAlliance_Personal.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FormAlliance_Personal.PopOut.Title), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName, 'Country', if({Object:Single:Country}scratch.objCountryA.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID, getString({Object:Single:Country}scratch.objCountryB.sidName), getString({Object:Single:Country}scratch.objCountryA.sidName)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_FormAlliance_Enemies"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Alliance Forming"/>
			<property name="otPlayEventType" value="PlayEventFormAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player At War with Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerCountryAWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerCountryAWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player At War with Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerCountryBWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerCountryBWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FormAlliance_Enemies.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FormAlliance_Enemies.PopOut.Title), 'CountryA', getString({Object:Single:Country}scratch.objCountryA.sidName), 'CountryB', getString({Object:Single:Country}scratch.objCountryB.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_FormAlliance_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Alliance Forming"/>
			<property name="otPlayEventType" value="PlayEventFormAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Country A is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryA.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not At War with Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerCountryAWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerCountryAWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Country B is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryB.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not At War with Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWar" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerCountryBWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerCountryBWar"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_FormAlliance_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FormAlliance_Other.PopOut.Title), 'CountryA', getString({Object:Single:Country}scratch.objCountryA.sidName), 'CountryB', getString({Object:Single:Country}scratch.objCountryB.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_FormAlliance_Personal"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Alliance Forming"/>
			<property name="otPlayEventType" value="PlayEventFormAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country A or Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="({Object:Single:Country}scratch.objCountryA.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID) OR ({Object:Single:Country}scratch.objCountryB.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FormAlliance_Personal.End_of_Turn.Title), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName, 'Country', if({Object:Single:Country}scratch.objCountryA.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID, getString({Object:Single:Country}scratch.objCountryB.sidName), getString({Object:Single:Country}scratch.objCountryA.sidName)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_FormAlliance_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Alliance Forming"/>
			<property name="otPlayEventType" value="PlayEventFormAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Country A is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryA.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Country B is Not Player"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryB.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventFormAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_FormAlliance_Other.End_of_Turn.Title), 'CountryA', getString({Object:Single:Country}scratch.objCountryA.sidName), 'CountryB', getString({Object:Single:Country}scratch.objCountryB.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_PlayerJoining"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Joining"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_JoinAlliance_PlayerJoining.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_PlayerJoining.PopOut.Desc), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_CountryJoiningPlayerAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_JoinAlliance_CountryJoiningPlayerAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_CountryJoiningPlayerAlliance.PopOut.Desc), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_CountryJoiningEnemyAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player at War with Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWarWithAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceWar"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_JoinAlliance_CountryJoiningEnemyAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_CountryJoiningEnemyAlliance.PopOut.Desc), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not Country Joining"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not at War with Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWarWithAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceWar"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_JoinAlliance_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_Other.PopOut.Desc), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_PlayerJoining"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Joining"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_PlayerJoining.End_of_Turn.Title), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_CountryJoiningPlayerAlliance"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_CountryJoiningPlayerAlliance.End_of_Turn.Title), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_JoinAlliance_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Added to Alliance"/>
			<property name="otPlayEventType" value="PlayEventJoinAlliance"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not Country Joining"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventJoinAlliance}scratch.objAllianceEvent.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_JoinAlliance_Other.End_of_Turn.Title), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AllianceNameChange"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Alliance Name Change"/>
			<property name="otPlayEventType" value="PlayEventAllianceNameChange"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAllianceNameChange}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceNameChange}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AllianceNameChange.End_of_Turn.Title), 'AllianceOldName', {Object:Single:PlayEventAllianceNameChange}scratch.objAllianceEvent.strOldName, 'AllianceNewName', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AllianceMerge_PlayerAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Alliances Merging"/>
			<property name="otPlayEventType" value="PlayEventAllianceMerge"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Merged Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_AllianceMerge_PlayerAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AllianceMerge_PlayerAlliance.PopOut.Desc), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName, 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName, 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AllianceMerge_PlayerWarWithAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Alliances Merging"/>
			<property name="otPlayEventType" value="PlayEventAllianceMerge"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player at War with Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWarWithAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceWar"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_AllianceMerge_PlayerWarWithAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AllianceMerge_PlayerWarWithAlliance.PopOut.Desc), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName, 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AllianceMerge_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Alliances Merging"/>
			<property name="otPlayEventType" value="PlayEventAllianceMerge"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not at War with Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsAtWarWithAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceWar"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
					<property name="nEnemyAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceWar"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_AllianceMerge_Other.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AllianceMerge_Other.PopOut.Desc), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName, 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName, 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AllianceMerge_PlayerAlliance"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Alliances Merging"/>
			<property name="otPlayEventType" value="PlayEventAllianceMerge"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Merged Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AllianceMerge_PlayerAlliance.End_of_Turn.Title), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName, 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName, 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AllianceMerge_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Alliances Merging"/>
			<property name="otPlayEventType" value="PlayEventAllianceMerge"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AllianceMerge_Other.End_of_Turn.Title), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName, 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName, 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-alliance.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AlliancePeaceMade_PlayerAllianceA"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_AlliancePeaceMade_PlayerAllianceA.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AlliancePeaceMade_PlayerAllianceA.PopOut.Desc), 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAllianceID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAllianceMerge}scratch.objAllianceEvent.nAllianceID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AlliancePeaceMade_PlayerAllianceB"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_AlliancePeaceMade_PlayerAllianceB.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AlliancePeaceMade_PlayerAllianceB.PopOut.Desc), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AlliancePeaceMade_PlayerAllianceA"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAllianceA.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AlliancePeaceMade_PlayerAllianceA.End_of_Turn.Title), 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AlliancePeaceMade_PlayerAllianceB"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAllianceB.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAllianceB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AlliancePeaceMade_PlayerAllianceB.End_of_Turn.Title), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_AlliancePeaceMade_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceA"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAllianceA.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventAlliancePeaceMade}scratch.objAllianceEvent.nAllianceIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAllianceB"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAllianceB.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAllianceB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_AlliancePeaceMade_Other.End_of_Turn.Title), 'AllianceA', {Object:Single:Alliance}scratch.objAllianceA.strDisplayName, 'AllianceB', {Object:Single:Alliance}scratch.objAllianceB.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryAlliancePeaceMade_PlayerCountry"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CountryAlliancePeaceMade_PlayerCountry.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryAlliancePeaceMade_PlayerCountry.PopOut.Desc), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryAlliancePeaceMade_PlayerAlliance"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CountryAlliancePeaceMade_PlayerAlliance.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryAlliancePeaceMade_PlayerAlliance.PopOut.Desc), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryAlliancePeaceMade_PlayerCountry"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryAlliancePeaceMade_PlayerCountry.End_of_Turn.Title), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryAlliancePeaceMade_PlayerAlliance"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryAlliancePeaceMade_PlayerAlliance.End_of_Turn.Title), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryAlliancePeaceMade_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryAlliancePeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Alliance B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetAlliance" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Alliance}scratch.objAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:PlayEventCountryAlliancePeaceMade}scratch.objPeaceEvent.nAllianceID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Not in Alliance"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorIsInAlliance" name="objAccessors">
					<property name="pathOutput" value="{bool:Single}scratch.bPlayerAlliance"/>
					<property name="nAllianceID" inheritFrom="{Object:Single:Alliance}scratch.objAlliance.nAllianceID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="!{bool:Single}scratch.bPlayerAlliance"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryAlliancePeaceMade_Other.End_of_Turn.Title), 'Country', getString({Object:Single:Country}scratch.objCountry.sidName), 'Alliance', {Object:Single:Alliance}scratch.objAlliance.strDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryPeaceMade_PlayerCountryA"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryPeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryA.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CountryPeaceMade_PlayerCountryA.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryPeaceMade_PlayerCountryA.PopOut.Desc), 'CountryB', getString({Object:Single:Country}scratch.objCountryB.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryPeaceMade_PlayerCountryB"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryPeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryB.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CountryPeaceMade_PlayerCountryB.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryPeaceMade_PlayerCountryB.PopOut.Desc), 'CountryA', getString({Object:Single:Country}scratch.objCountryA.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryPeaceMade_PlayerCountryA"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryPeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryA.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryPeaceMade_PlayerCountryA.End_of_Turn.Title), 'CountryB', getString({Object:Single:Country}scratch.objCountryB.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryPeaceMade_PlayerCountryB"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryPeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryB.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryPeaceMade_PlayerCountryB.End_of_Turn.Title), 'CountryA', getString({Object:Single:Country}scratch.objCountryA.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountryPeaceMade_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Peace Made"/>
			<property name="otPlayEventType" value="PlayEventCountryPeaceMade"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryA"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDA"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country A"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryA.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryB"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCountryPeaceMade}scratch.objPeaceEvent.nCountryIDB"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country B"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryB.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountryPeaceMade_Other.End_of_Turn.Title), 'CountryA', getString({Object:Single:Country}scratch.objCountryA.sidName), 'CountryB', getString({Object:Single:Country}scratch.objCountryB.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Surrender"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Surrenders"/>
			<property name="otPlayEventType" value="PlayEventCountrySurrendered"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Surrenered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySurrendered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.strCountrySurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Countries Territorial Recipients"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountriesFromNames" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCountryTerritorialRecipients"/>
					<property name="pathInput" value="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.strCountryTerritorialRecipients"/>
				</object>
				<object type="AccessorLookupStringIDs" name="objAccessors">
					<property name="pathOutput" value="{String:Variable}scratch.strCountryTerritorialRecipients"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCountryTerritorialRecipients"/>
					<property name="strProperty" value="sidName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountry"/>
					<property name="strValue" computeFrom="getString({Object:Single:Country}scratch.objCountrySurrendered.sidName)"/>
				</object>
				<object type="VariableStringParameter" name="objVarStrings">
					<property name="strName" value="strConquerors"/>
					<property name="strValues" computeFrom="{String:Variable}scratch.strCountryTerritorialRecipients"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountrySurrender_PlayerInvolved"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Surrenders"/>
			<property name="otPlayEventType" value="PlayEventCountrySurrendered"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="({Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.nCountryIDSurrendered == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID) OR (contains({Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.nCountryIDTerritorialRecipients, {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID))"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Surrenered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySurrendered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.strCountrySurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Countries Territorial Recipients"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountriesFromNames" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCountryTerritorialRecipients"/>
					<property name="pathInput" value="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.strCountryTerritorialRecipients"/>
				</object>
				<object type="AccessorLookupStringIDs" name="objAccessors">
					<property name="pathOutput" value="{String:Variable}scratch.strCountryTerritorialRecipients"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCountryTerritorialRecipients"/>
					<property name="strProperty" value="sidName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountrySurrendered"/>
					<property name="strValue" computeFrom="getString({Object:Single:Country}scratch.objCountrySurrendered.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountrySurrender_PlayerInvolved.End_of_Turn.Title), 'CountrySurrendered', getString({Object:Single:Country}scratch.objCountrySurrendered.sidName), 'TerritorialRecipients', concat({String:Variable}scratch.strCountryTerritorialRecipients, ', '))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-surrender.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
				<object type="VariableStringParameter" name="objVarStrings">
					<property name="strName" value="strConquerors"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CountrySurrender_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Surrenders"/>
			<property name="otPlayEventType" value="PlayEventCountrySurrendered"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="({Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.nCountryIDSurrendered != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID) AND (!contains({Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.nCountryIDTerritorialRecipients, {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID))"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Surrenered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountrySurrendered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.strCountrySurrendered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Countries Territorial Recipients"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountriesFromNames" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCountryTerritorialRecipients"/>
					<property name="pathInput" value="{Object:Single:PlayEventCountrySurrendered}scratch.objCountryEvent.strCountryTerritorialRecipients"/>
				</object>
				<object type="AccessorLookupStringIDs" name="objAccessors">
					<property name="pathOutput" value="{String:Variable}scratch.strCountryTerritorialRecipients"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCountryTerritorialRecipients"/>
					<property name="strProperty" value="sidName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountrySurrendered"/>
					<property name="strValue" computeFrom="getString({Object:Single:Country}scratch.objCountrySurrendered.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_CountrySurrender_Other.End_of_Turn.Title), 'CountrySurrendered', getString({Object:Single:Country}scratch.objCountrySurrendered.sidName), 'CountryTerritorialRecipients', concat({String:Variable}scratch.strCountryTerritorialRecipients, ','))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-surrender.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
				<object type="VariableStringParameter" name="objVarStrings">
					<property name="strName" value="strConquerors"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Ratified"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventTreatyRatified"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Treaty Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefDefensePact'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceDemands'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceDemands'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveDemands'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objFromSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Teams"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Countries Territorial Recipients"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorEvaluateExpression" name="objAccessors">
					<property name="pathOutput" value="{String:Variable}scratch.strCountrySigners"/>
					<property name="expRession" value="extractProperties(String, {Object:Variable:TreatySigner}scratch.objToSigners, TreatySigner, 'strCountry')"/>
				</object>
				<object type="AccessorGetCountriesFromNames" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objCountrySigners"/>
					<property name="pathInput" value="{String:Variable}scratch.strCountrySigners"/>
				</object>
				<object type="AccessorLookupStringIDs" name="objAccessors">
					<property name="pathOutput" value="{String:Variable}scratch.strCountrySigners"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objCountrySigners"/>
					<property name="strProperty" value="sidName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.Treaty_Ratified.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="if({Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType == 'Defense Pact', buildFormattedString(getFormatString(FSID.Feedback.Treaty_Ratified.PopOut.Desc1), 'CountrySigners', concat({String:Variable}scratch.strCountrySigners, ', ')), buildFormattedString(getFormatString(FSID.Feedback.Treaty_Ratified.PopOut.Desc2), 'CountrySigners', concat({String:Variable}scratch.strCountrySigners, ', '), 'Treaty', {Object:Single:TreatyDef}scratch.objTreaty.strName))"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Cancelled"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventTreatyCancelled"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Not Defense Pact"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType != 'Defense Pact'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Team IDs"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetDefenseCountries" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:Country}scratch.objOldAllies"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:Country}scratch.objOldAllies, Country, 'strName'), {Object:Single:Player}scratch.objPlayer.objCountry.strName) OR {Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered == {Object:Single:Player}scratch.objPlayer.objCountry.strName OR {Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryCancelled != {Object:Single:Player}scratch.objPlayer.objCountry.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Cancelled"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCancelled"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryCancelled"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Offered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOffered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Team Countries"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorLookupStringIDs" name="objAccessors">
					<property name="pathOutput" value="{String:Variable}scratch.strOldAllies"/>
					<property name="pathInput" value="{Object:Variable:Country}scratch.objOldAllies"/>
					<property name="strProperty" value="sidName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.Treaty_Cancelled.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType == 'Defense Pact', buildFormattedString(getFormatString(FSID.Feedback.Treaty_Cancelled.PopOut.Desc1), 'CountryCancelled', getString({Object:Single:Country}scratch.objCountryCancelled.sidName), 'CountryOffered', getString({Object:Single:Country}scratch.objCountryOffered.sidName), 'OldAllies', concat({String:Variable}scratch.strOldAllies, ' ')), buildFormattedString(getFormatString(FSID.Feedback.Treaty_Cancelled.PopOut.Desc2), 'CountryCancelled', getString({Object:Single:Country}scratch.objCountryCancelled.sidName), 'Treaty', {Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType, 'CountryOffered', getString({Object:Single:Country}scratch.objCountryOffered.sidName)))"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Research_Complete"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventResearchComplete"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strListName"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strListName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strProjectName"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strProjectName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strProjectDisplayName"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strProjectDisplayName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.Research_Complete.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Research_Complete.PopOut.Desc), 'ProjectName', {Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strProjectDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-research.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Rejected"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventTreatyRejected"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Treaty Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Single Party To"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) == 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="To Party Rejected"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSignersRejected"/>
					<property name="pathInput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND cast(String, {Object}input.eTreatyState) == 'TREATY_REJECTED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSignersRejected) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="No From Signers Rejected"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSignersRejected"/>
					<property name="pathInput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND cast(String, {Object}input.eTreatyState) == 'TREATY_REJECTED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objFromSignersRejected) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objFromSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Surrenered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRejected"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryRejected"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.Treaty_Rejected.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="if({Object:Single:TreatyDef}scratch.objTreaty.strName == 'Defense Pact', buildFormattedString(getFormatString(FSID.Feedback.Treaty_Rejected.PopOut.Desc1), 'CountryRejected', getString({Object:Single:Country}scratch.objCountryRejected.sidName)), buildFormattedString(getFormatString(FSID.Feedback.Treaty_Rejected.PopOut.Desc2), 'CountryRejected', getString({Object:Single:Country}scratch.objCountryRejected.sidName), 'Treaty', {Object:Single:TreatyDef}scratch.objTreaty.strName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryPrimary"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryRejected"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryInvolved"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Rejected_Multiparty_From"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventTreatyRejected"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Treaty Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Multi Party From"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objFromSigners) GT 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="From Rejected"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSignersRejected"/>
					<property name="pathInput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND cast(String, {Object}input.eTreatyState) == 'TREATY_REJECTED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objFromSignersRejected) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Variable:TreatySigner}scratch.objFromSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryPrimary"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryRejected"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryInvolved"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Rejected_Multiparty_To"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventTreatyRejected"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Treaty Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Multi Party To"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND !{Object}input.bFromCountry"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSigners) GT 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="To Rejected"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objToSignersRejected"/>
					<property name="pathInput" value="{Object:Variable:TreatySigner}scratch.objToSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND cast(String, {Object}input.eTreatyState) == 'TREATY_REJECTED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objToSignersRejected) GTE 1"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="No From Signers Rejected"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="pathInput" value="{Object:Single:TreatyDef}scratch.objTreaty.objSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND {Object}input.bFromCountry"/>
				</object>
				<object type="AccessorSelectObjects" name="objAccessors">
					<property name="pathOutput" value="{Object:Variable:TreatySigner}scratch.objFromSignersRejected"/>
					<property name="pathInput" value="{Object:Variable:TreatySigner}scratch.objFromSigners"/>
					<property name="expWhere" value="{Object}input ISA TreatySigner AND cast(String, {Object}input.eTreatyState) == 'TREATY_REJECTED'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="sizeOf({Object:Variable:TreatySigner}scratch.objFromSignersRejected) LTE 0"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="contains(extractProperties(String, {Object:Single:TreatyDef}scratch.objTreaty.objSigners, TreatySigner, 'strCountry'), {Object:Single:Player}scratch.objPlayer.objCountry.strName)"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryPrimary"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryRejected"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryInvolved"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyType"/>
					<property name="strValue" inheritFrom="{Object:Single:TreatyDef}scratch.objTreaty.strName"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyRejected}scratch.objTreatyEvent.nTreatyID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_Embargo_PlayerTargetted"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Embargo"/>
			<property name="otPlayEventType" value="PlayEventEmbargo"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nFromCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nToCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_Embargo_PlayerTargetted.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_Embargo_PlayerTargetted.PopOut.Desc), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_Embargo_PlayerDeclaring"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Embargo"/>
			<property name="otPlayEventType" value="PlayEventEmbargo"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nFromCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nToCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_Embargo_PlayerDeclaring.End_of_Turn.Title), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_Embargo_PlayerTargetted"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Embargo"/>
			<property name="otPlayEventType" value="PlayEventEmbargo"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nFromCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nToCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_Embargo_PlayerTargetted.End_of_Turn.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_Embargo_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Embargo"/>
			<property name="otPlayEventType" value="PlayEventEmbargo"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nFromCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventEmbargo}scratch.objEmbargoEvent.nToCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_Embargo_Other.End_of_Turn.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CityNuked_Attacker"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CityNuked_Attacker.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" value=""/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCity"/>
					<property name="strValue" computeFrom="getString({Object:Single:City}scratch.objCity.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CityNuked_CityController"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:Country}scratch.objCountryCityController.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryAttacker.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CityNuked_CityController.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" value=""/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCity"/>
					<property name="strValue" computeFrom="getString({Object:Single:City}scratch.objCity.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strAttacker"/>
					<property name="strValue" computeFrom="getString({Object:Single:Country}scratch.objCountryAttacker.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_CityNuked_CityOwner"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityOwner"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nOwnerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is City Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:Country}scratch.objCountryCityOwner.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryAttacker.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryCityController.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_CityNuked_CityOwner.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" value=""/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCity"/>
					<property name="strValue" computeFrom="getString({Object:Single:City}scratch.objCity.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strAttacker"/>
					<property name="strValue" computeFrom="getString({Object:Single:Country}scratch.objCountryAttacker.sidName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_NukeCity_Attacker"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_NukeCity_Attacker.End_of_Turn.Title), 'City', getString({Object:Single:City}scratch.objCity.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_NukeCity_CityController"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:Country}scratch.objCountryCityController.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryAttacker.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_NukeCity_CityController.End_of_Turn.Title), 'City', getString({Object:Single:City}scratch.objCity.sidName), 'CountryAttacker', getString({Object:Single:Country}scratch.objCountryAttacker.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_NukeCity_CityOwner"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityOwner"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nOwnerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is City Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:Country}scratch.objCountryCityOwner.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryAttacker.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryCityController.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_NukeCity_CityOwner.End_of_Turn.Title), 'City', getString({Object:Single:City}scratch.objCity.sidName), 'CountryAttacker', getString({Object:Single:Country}scratch.objCountryAttacker.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_NukeCity_Default"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventCityNuked"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityNuked}scratch.objCityEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryAttacker"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCityByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCityGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup City Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCityOwner"/>
					<property name="nCountryID" inheritFrom="{Object:Single:City}scratch.objCity.nOwnerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Attacker"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:PlayEventCityNuked}scratch.objCityEvent.nCountryIDAttacker"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not City Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryCityController.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not City Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryCityOwner.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_NukeCity_Default.End_of_Turn.Title), 'City', getString({Object:Single:City}scratch.objCity.sidName), 'CountryAttacker', getString({Object:Single:Country}scratch.objCountryAttacker.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_IndependenceGranted_PlayerDeclaring"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Liberated"/>
			<property name="otPlayEventType" value="PlayEventIndependenceGranted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nMasterCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nFreeCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IndependenceGranted_PlayerDeclaring.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_PlayerDeclaring.PopOut.Desc), 'Country', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_IndependenceGranted_PlayerTargetted"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Liberated"/>
			<property name="otPlayEventType" value="PlayEventIndependenceGranted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nMasterCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nFreeCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_IndependenceGranted_PlayerTargetted.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_PlayerTargetted.PopOut.Desc), 'Country', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_IndependenceGranted_Other"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="strGroupTag" value="MLGENERIC Country Liberated"/>
			<property name="otPlayEventType" value="PlayEventIndependenceGranted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nMasterCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nFreeCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Government Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetGovTypeTemplate" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:GovTypeTemplate}scratch.objGovType"/>
					<property name="strGovType" inheritFrom="{Object:Single:Country}scratch.objCountryDeclaring.strGovType"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_Other.PopOut.Title), 'GovType', getString({Object:Single:GovTypeTemplate}scratch.objGovType.sidDisplayName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDesc"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_Other.PopOut.Desc), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strGovType"/>
					<property name="strValue" computeFrom="{Object:Single:Country}scratch.objCountryTargetted.strGovType"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-war.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nCountryID"/>
					<property name="nValue" computeFrom="{Object:Single:Country}scratch.objCountryTargetted.nCountryID"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_IndependenceGranted_PlayerDeclaring"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Liberated"/>
			<property name="otPlayEventType" value="PlayEventIndependenceGranted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nMasterCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nFreeCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_PlayerDeclaring.End_of_Turn.Title), 'Country', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="'notification-end-turn-liberate-' + {Object:Single:Country}scratch.objCountryTargetted.strGovType + '.tga'"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_IndependenceGranted_PlayerTargetted"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Liberated"/>
			<property name="otPlayEventType" value="PlayEventIndependenceGranted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nMasterCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nFreeCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_PlayerTargetted.End_of_Turn.Title), 'Country', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="'notification-end-turn-liberate-' + {Object:Single:Country}scratch.objCountryTargetted.strGovType + '.tga'"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_IndependenceGranted_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Country Liberated"/>
			<property name="otPlayEventType" value="PlayEventIndependenceGranted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryDeclaring"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nMasterCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Declaring"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryDeclaring.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryTargetted"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventIndependenceGranted}scratch.objCountryEvent.nFreeCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Country Targetted"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountryTargetted.nCountryID != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_IndependenceGranted_Other.End_of_Turn.Title), 'CountryDeclaring', getString({Object:Single:Country}scratch.objCountryDeclaring.sidName), 'CountryTargetted', getString({Object:Single:Country}scratch.objCountryTargetted.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="'notification-end-turn-liberate-' + {Object:Single:Country}scratch.objCountryTargetted.strGovType + '.tga'"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Ratified_PlayerRatified"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTreatyRatified"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Treaty Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefDefensePact'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAid'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceDemands'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceDemands'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveDemands'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country Ratified"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryRatified == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find Offered Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOffered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryRatified"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryRatified"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryOffered"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Treaty_Ratified_PlayerRatified.End_of_Turn.Title), 'Treaty', {Object:Single:TreatyDef}scratch.objTreaty.strName, 'CountryOffered', getString({Object:Single:Country}scratch.objCountryOffered.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Treaty_Ratified_PlayerOffered"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTreatyRatified"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Treaty Type"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetTreatyDef" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:TreatyDef}scratch.objTreaty"/>
					<property name="nID" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefDefensePact'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAid'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefAlliancePeaceDemands'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceDemands'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveEndWar'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveConcessions'"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:TreatyDef}scratch.objTreaty.strTreatyDefType != 'TreatyDefSeparatePeaceLeaveDemands'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country Offered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryOffered == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find Offered Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRatified"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryRatified"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryRatified"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryRatified"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryOffered"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Treaty_Ratified_PlayerOffered.End_of_Turn.Title), 'CountryRatified', getString({Object:Single:Country}scratch.objCountryRatified.sidName), 'Treaty', {Object:Single:TreatyDef}scratch.objTreaty.strName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nTreatyID"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTreatyRatified}scratch.objTreatyEvent.nTreatyID"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="TreatyState_Cancelled_PlayerOffered"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTreatyCancelled"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Not Defense Pact"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType != 'Defense Pact'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find Offered Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOffered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country Offered"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find Cancelled Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryCancelled"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryCancelled"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryCancelled"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryCancelled"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryOffered"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyState"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.TreatyState_Cancelled_PlayerOffered.End_of_Turn.Title), 'CountryCancelled', getString({Object:Single:Country}scratch.objCountryCancelled.sidName), 'TreatyType', {Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="TreatyState_Cancelled_PlayerCancelled"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTreatyCancelled"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Not Defense Pact"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType != 'Defense Pact'"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find Offered Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOffered"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player Country Cancelled"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryCancelled == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryCancelled"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryCancelled"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountryOffered"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strCountryOffered"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTreatyState"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.TreatyState_Cancelled_PlayerCancelled.End_of_Turn.Title), 'CountryOfferedGovPossessive', getString({Object:Single:Country}scratch.objCountryOffered.sidPossessive), 'TreatyType', {Object:Single:PlayEventTreatyCancelled}scratch.objTreatyEvent.strTreatyType)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Trade_Increase"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTradeIncrease"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName OR {Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strToCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find From Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strFromCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strFromCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strToCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strToCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName, buildFormattedString(getFormatString(FSID.Feedback.Trade_Increase.End_of_Turn.Title1), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.nNewAmount)), buildFormattedString(getFormatString(FSID.Feedback.Trade_Increase.End_of_Turn.Title2), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.nNewAmount)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nOldAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.nOldAmount"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nNewAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeIncrease}scratch.objTradeEvent.nNewAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Trade_Decrease"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTradeDecrease"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName OR {Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strToCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find From Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strFromCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strFromCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strToCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strToCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName, buildFormattedString(getFormatString(FSID.Feedback.Trade_Decrease.End_of_Turn.Title1), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.nNewAmount)), buildFormattedString(getFormatString(FSID.Feedback.Trade_Decrease.End_of_Turn.Title2), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.nNewAmount)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nOldAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.nOldAmount"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nNewAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeDecrease}scratch.objTradeEvent.nNewAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Aid_Increase"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventAidIncrease"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName OR {Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strToCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find From Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strFromCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strFromCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strToCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strToCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventAidIncrease}scratch.objAidEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName, buildFormattedString(getFormatString(FSID.Feedback.Aid_Increase.End_of_Turn.Title1), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventAidIncrease}scratch.objAidEvent.nNewAmount)), buildFormattedString(getFormatString(FSID.Feedback.Aid_Increase.End_of_Turn.Title2), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventAidIncrease}scratch.objAidEvent.nNewAmount)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nOldAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.nOldAmount"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nNewAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAidIncrease}scratch.objAidEvent.nNewAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Aid_Decrease"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventAidDecrease"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName OR {Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strToCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find From Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strFromCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strFromCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strToCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strToCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventAidDecrease}scratch.objAidEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName, buildFormattedString(getFormatString(FSID.Feedback.Aid_Decrease.End_of_Turn.Title1), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventAidDecrease}scratch.objAidEvent.nNewAmount)), buildFormattedString(getFormatString(FSID.Feedback.Aid_Decrease.End_of_Turn.Title2), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventAidDecrease}scratch.objAidEvent.nNewAmount)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nOldAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.nOldAmount"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nNewAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventAidDecrease}scratch.objAidEvent.nNewAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Trade_Defaulter"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTradeDefault"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strToCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strFromCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strFromCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strToCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strToCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Trade_Defaulter.End_of_Turn.Title), 'AmountShort', cast(String, {Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nAmountShort), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'NewAmount', cast(String, {Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nNewAmount))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAmountShort"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nAmountShort"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nNewAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nNewAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Trade_Defaultee"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTradeDefault"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strFromCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strFromCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strToCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strToCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Trade_Defaultee.End_of_Turn.Title), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'AmountShort', cast(String, {Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nAmountShort), 'NewAmount', cast(String, {Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nNewAmount))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAmountShort"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nAmountShort"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nNewAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventTradeDefault}scratch.objTradeEvent.nNewAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Trade_Start"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventTradeStart"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventTradeStart}scratch.objTradeEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventTradeStart}scratch.objTradeEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName OR {Object:Single:PlayEventTradeStart}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventTradeStart}scratch.objTradeEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeStart}scratch.objTradeEvent.strToCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find From Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventTradeStart}scratch.objTradeEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventTradeStart}scratch.objTradeEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName, buildFormattedString(getFormatString(FSID.Feedback.Trade_Start.End_of_Turn.Title1), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventTradeStart}scratch.objTradeEvent.nAmount)), buildFormattedString(getFormatString(FSID.Feedback.Trade_Start.End_of_Turn.Title2), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventTradeStart}scratch.objTradeEvent.nAmount)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Aid_Start"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventAidStart"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventAidStart}scratch.objAidEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DWorldMarketSlidePanel"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Involved"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventAidStart}scratch.objAidEvent.strToCountry == {Object:Single:Player}scratch.objPlayer.strName OR {Object:Single:PlayEventAidStart}scratch.objAidEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventAidStart}scratch.objAidEvent.strResource"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find To Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objToCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventAidStart}scratch.objAidEvent.strToCountry"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Find From Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objFromCountry"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventAidStart}scratch.objAidEvent.strFromCountry"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventAidStart}scratch.objAidEvent.strFromCountry == {Object:Single:Player}scratch.objPlayer.strName, buildFormattedString(getFormatString(FSID.Feedback.Aid_Start.End_of_Turn.Title1), 'Resource', {String:Single}scratch.strResource, 'ToCountry', getString({Object:Single:Country}scratch.objToCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventAidStart}scratch.objAidEvent.nAmount)), buildFormattedString(getFormatString(FSID.Feedback.Aid_Start.End_of_Turn.Title2), 'Resource', {String:Single}scratch.strResource, 'FromCountry', getString({Object:Single:Country}scratch.objFromCountry.sidName), 'Amount', cast(String, {Object:Single:PlayEventAidStart}scratch.objAidEvent.nAmount)))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-trade.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Infrastructure_Complete"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventInfrastructureComplete"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventInfrastructureComplete}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountry"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventInfrastructureComplete}scratch.objCountryEvent.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Country}scratch.objCountry.strName == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventInfrastructureComplete}scratch.objCountryEvent.nRegionID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Infrastructure_Complete.End_of_Turn.Title), 'InfraType', {Object:Single:PlayEventInfrastructureComplete}scratch.objCountryEvent.strInfraDisplayName, 'Region', getString({Object:Single:Region}scratch.objRegion.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="{Object:Single:PlayEventInfrastructureComplete}scratch.objCountryEvent.strInfraType + '.tga'"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Research_Complete"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventResearchComplete"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefUIPanel" name="objLink">
				<property name="strPanelName" value="UI2DSlidePanelResearchProjects"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strListName"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strListName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strProjectName"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strProjectName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strProjectDisplayName"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strProjectDisplayName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Research_Complete.End_of_Turn.Title), 'ProjectDisplayName', {Object:Single:PlayEventResearchComplete}scratch.objCountryEvent.strProjectDisplayName)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-research.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_ConqueredRegion_PlayerConqueror"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Conquered"/>
			<property name="otPlayEventType" value="PlayEventConqueredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Conqueror"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDConqueror == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryController"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_ConqueredRegion_PlayerConqueror.End_of_Turn.Title), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'OriginalController', getString({Object:Single:Country}scratch.objCountryController.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.strName, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_ConqueredRegion_PlayerConquered"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Conquered"/>
			<property name="otPlayEventType" value="PlayEventConqueredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDOriginalController == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryConqueror"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryConqueror"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_ConqueredRegion_PlayerConquered.End_of_Turn.Title), 'CountryConqueror', getString({Object:Single:Country}scratch.objCountryConqueror.sidName), 'RegionConquered', getString({Object:Single:Region}scratch.objRegion.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.strName, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_ConqueredRegion_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Conquered"/>
			<property name="otPlayEventType" value="PlayEventConqueredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Conqueror"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDConqueror != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nCountryIDOriginalController != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.nRegionIDConquered"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryController"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Country Conqueror"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryConqueror"/>
					<property name="strCountry" inheritFrom="{Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryConqueror"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_ConqueredRegion_Other.End_of_Turn.Title), 'CountryConqueror', getString({Object:Single:Country}scratch.objCountryConqueror.sidName), 'RegionConquered', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryOriginalController', getString({Object:Single:Country}scratch.objCountryController.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventConqueredRegion}scratch.objRegionEvent.strCountryOriginalController == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.strName, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_RestoredRegion_PlayerRestorer"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Restored"/>
			<property name="otPlayEventType" value="PlayEventRestoredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Restorer"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDRestorer == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Restorer"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRestorer"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDRestorer"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nRegionIDRestored"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_RestoredRegion_PlayerRestorer.End_of_Turn.Title), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryForfeiter', getString({Object:Single:Country}scratch.objCountryForfeiter.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_RestoredRegion_PlayerForfeiter"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Restored"/>
			<property name="otPlayEventType" value="PlayEventRestoredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Restorer"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRestorer"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDRestorer"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nRegionIDRestored"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_RestoredRegion_PlayerForfeiter.End_of_Turn.Title), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryRestorer', getString({Object:Single:Country}scratch.objCountryRestorer.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_RestoredRegion_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Restored"/>
			<property name="otPlayEventType" value="PlayEventRestoredRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Restorer"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDRestorer != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Restorer"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRestorer"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDRestorer"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nRegionIDRestored"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_RestoredRegion_Other.End_of_Turn.Title), 'CountryRestorer', getString({Object:Single:Country}scratch.objCountryRestorer.sidName), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryForfeiter', getString({Object:Single:Country}scratch.objCountryForfeiter.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventRestoredRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LiberatedRegion_PlayerLiberator"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Liberated"/>
			<property name="otPlayEventType" value="PlayEventLiberatedRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Liberator"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDLiberator == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Liberator"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryLiberator"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDLiberator"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOriginalController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDOriginalController"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nRegionIDLiberated"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LiberatedRegion_PlayerLiberator.End_of_Turn.Title), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryForfeiter', getString({Object:Single:Country}scratch.objCountryForfeiter.sidName), 'CountryOriginalController', getString({Object:Single:Country}scratch.objCountryOriginalController.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LiberatedRegion_PlayerOriginalController"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Liberated"/>
			<property name="otPlayEventType" value="PlayEventLiberatedRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDOriginalController == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Liberator"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryLiberator"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDLiberator"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOriginalController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDOriginalController"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nRegionIDLiberated"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LiberatedRegion_PlayerOriginalController.End_of_Turn.Title), 'CountryLiberator', getString({Object:Single:Country}scratch.objCountryLiberator.sidName), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryForfeiter', getString({Object:Single:Country}scratch.objCountryForfeiter.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LiberatedRegion_PlayerForfeiter"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Liberated"/>
			<property name="otPlayEventType" value="PlayEventLiberatedRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Liberator"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryLiberator"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDLiberator"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOriginalController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDOriginalController"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nRegionIDLiberated"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LiberatedRegion_PlayerForfeiter.End_of_Turn.Title), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryLiberator', getString({Object:Single:Country}scratch.objCountryLiberator.sidName), 'CountryOriginalController', getString({Object:Single:Country}scratch.objCountryOriginalController.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_LiberatedRegion_Other"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="strGroupTag" value="MLGENERIC Region Liberated"/>
			<property name="otPlayEventType" value="PlayEventLiberatedRegion"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:Region}scratch.objRegion.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Liberator"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDLiberator != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDOriginalController != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Not Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter != {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Liberator"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryLiberator"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDLiberator"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Original Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryOriginalController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDOriginalController"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Forfeiter"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryForfeiter"/>
					<property name="nCountryID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegion" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nRegionID" inheritFrom="{Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nRegionIDLiberated"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.GENERIC_LiberatedRegion_Other.End_of_Turn.Title), 'CountryLiberator', getString({Object:Single:Country}scratch.objCountryLiberator.sidName), 'Region', getString({Object:Single:Region}scratch.objRegion.sidName), 'CountryForfeiter', getString({Object:Single:Country}scratch.objCountryForfeiter.sidName), 'CountryOriginalController', getString({Object:Single:Country}scratch.objCountryOriginalController.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" computeFrom="if({Object:Single:PlayEventLiberatedRegion}scratch.objRegionEvent.nCountryIDForfeiter == {Object}.objDriver.objMyAvatar.objPlayer.objCountry.nCountryID, 'notification-end-turn-loose-region.tga', 'notification-end-turn-get-region.tga')"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="false"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Resource_Shortage"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventResourceShortage"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventResourceShortage}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventResourceShortage}scratch.objCountryEvent.strCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Resource"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetResourceDisplayName" name="objAccessors">
					<property name="pathOutput" value="{String:Single}scratch.strResource"/>
					<property name="strResource" inheritFrom="{Object:Single:PlayEventResourceShortage}scratch.objCountryEvent.strResource"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResourceShortage}scratch.objCountryEvent.strCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strResource"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventResourceShortage}scratch.objCountryEvent.strResource"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Resource_Shortage.End_of_Turn.Title), 'Amount', format({Object:Single:PlayEventResourceShortage}scratch.objCountryEvent.nAmount, 0, true), 'Resource', {String:Single}scratch.strResource)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-shortage.tga"/>
				</object>
				<object type="IntParameter" name="objInts">
					<property name="strName" value="nAmount"/>
					<property name="nValue" inheritFrom="{Object:Single:PlayEventResourceShortage}scratch.objCountryEvent.nAmount"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="City_Upgraded"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventCityUpgraded"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:City}scratch.objCity.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCity" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="strRegionName" inheritFrom="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strRegion"/>
					<property name="strCityName" inheritFrom="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strCity"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCity"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strCity"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIndustrialLevel"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strIndustrialLevel"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.City_Upgraded.End_of_Turn.Title), 'City', getString({Object:Single:City}scratch.objCity.sidName), 'IndustrialLevel', {Object:Single:PlayEventCityUpgraded}scratch.objCountryEvent.strIndustrialLevel)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-industry.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Unit_Completed"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventUnitCompleted"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:City}scratch.objCity.nGameObject"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Self Country"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strCountry == {Object:Single:Player}scratch.objPlayer.strName"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Get City"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCity" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:City}scratch.objCity"/>
					<property name="strRegionName" inheritFrom="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strRegion"/>
					<property name="strCityName" inheritFrom="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strCity"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCountry"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strCountry"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strCity"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strCity"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strUnitType"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strUnitType"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Unit_Completed.End_of_Turn.Title), 'UnitType', {Object:Single:PlayEventUnitCompleted}scratch.objCountryEvent.strUnitType, 'City', getString({Object:Single:City}scratch.objCity.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-production.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Region_Damaged_Controller"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventRegionDamaged"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.nRegionGOID"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegionByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.nRegionGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Region Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRegionController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Region}scratch.objRegion.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Region Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:Country}scratch.objCountryRegionController.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strRegion"/>
					<property name="strValue" inheritFrom="{Object:Single:Region}scratch.objRegion.sidName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDamageType"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.strDamageType"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Region_Damaged.End_of_Turn.Title), 'DamageType', {Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.strDamageType, 'Region', getString({Object:Single:Region}scratch.objRegion.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="combat-icon.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="Region_Damaged_Owner"/>
			<property name="strTemplateSet" value="End_of_Turn"/>
			<property name="otPlayEventType" value="PlayEventRegionDamaged"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="LinkDefGO" name="objLink">
				<property name="nGOID" inheritFrom="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.nRegionGOID"/>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Region"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetRegionByGOID" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Region}scratch.objRegion"/>
					<property name="nGOID" inheritFrom="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.nRegionGOID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Region Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRegionController"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Region}scratch.objRegion.nControllerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Setup Region Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="AccessorGetCountry" name="objAccessors">
					<property name="pathOutput" value="{Object:Single:Country}scratch.objCountryRegionOwner"/>
					<property name="nCountryID" inheritFrom="{Object:Single:Region}scratch.objRegion.nOwnerID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is not Region Controller"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID != {Object:Single:Country}scratch.objCountryRegionController.nCountryID"/>
				</object>
			</object>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Player is Region Owner"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:Player}scratch.objPlayer.objCountry.nCountryID == {Object:Single:Country}scratch.objCountryRegionOwner.nCountryID"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strRegion"/>
					<property name="strValue" inheritFrom="{Object:Single:Region}scratch.objRegion.sidName"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strDamageType"/>
					<property name="strValue" inheritFrom="{Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.strDamageType"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="buildFormattedString(getFormatString(FSID.Feedback.Region_Damaged.End_of_Turn.Title), 'DamageType', {Object:Single:PlayEventRegionDamaged}scratch.objRegionEvent.strDamageType, 'Region', getString({Object:Single:Region}scratch.objRegion.sidName))"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="combat-icon.tga"/>
				</object>
				<object type="BoolParameter" name="objBools">
					<property name="strName" value="bNationalEvent"/>
					<property name="bValue" value="true"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_ResearchBreakthrough"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Event Type is GENERIC_ResearchBreakthrough"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.nPlayerID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_ResearchBreakthrough'"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ResearchBreakthrough.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="ArgListParameter" name="objArgLists">
					<property name="strName" value="objDisplayData"/>
					<property name="objArgList" inheritFrom="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.objArgLists{Display Data}"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_ResearchSetback"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Event Type is GENERIC_ResearchSetback"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.nPlayerID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_ResearchSetback'"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_ResearchSetback.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="ArgListParameter" name="objArgLists">
					<property name="strName" value="objDisplayData"/>
					<property name="objArgList" inheritFrom="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.objArgLists{Display Data}"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_ProducerExpand"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Event Type is GENERIC_ProducerExpand"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.nPlayerID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_ProducerExpand'"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="ArgListParameter" name="objArgLists">
					<property name="strName" value="objDisplayData"/>
					<property name="objArgList" inheritFrom="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.objArgLists{Display Data}"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WorkerMoraleHigh"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Event Type is GENERIC_WorkerMoraleHigh"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.nPlayerID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_WorkerMoraleHigh'"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WorkerMoraleHigh.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="ArgListParameter" name="objArgLists">
					<property name="strName" value="objDisplayData"/>
					<property name="objArgList" inheritFrom="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.objArgLists{Display Data}"/>
				</object>
			</object>
		</object>
		<object type="FeedbackTemplateParamBlock" name="objFeedbackTemplates">
			<property name="strType" value="GENERIC_WorkerMoraleLow"/>
			<property name="strTemplateSet" value="PopOut"/>
			<property name="otPlayEventType" value="PlayEventNewScriptedEvent"/>
			<property name="pathPlayEvent" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent"/>
			<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
			<object type="AccessorRuleSet" name="objConditions">
				<property name="strDebugLabel" value="Event Type is GENERIC_WorkerMoraleLow"/>
				<property name="pathPlayer" value="{Object:Single:Player}scratch.objPlayer"/>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.nPlayerID == {Object:Single:Player}scratch.objPlayer.objCountry.nCountryID"/>
				</object>
				<object type="RuleDefExpression" name="objRules">
					<property name="expRession" value="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.strTypeLabel == 'GENERIC_WorkerMoraleLow'"/>
				</object>
			</object>
			<object type="ParameterBlock" name="objInstanceParams">
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strTitle"/>
					<property name="strValue" computeFrom="getString(SID.Feedback.GENERIC_WorkerMoraleLow.PopOut.Title)"/>
				</object>
				<object type="StringParameter" name="objStrings">
					<property name="strName" value="strIcon"/>
					<property name="strValue" value="notification-end-turn-scroll.tga"/>
				</object>
				<object type="ArgListParameter" name="objArgLists">
					<property name="strName" value="objDisplayData"/>
					<property name="objArgList" inheritFrom="{Object:Single:PlayEventNewScriptedEvent}scratch.objScriptEvent.objArgLists{Display Data}"/>
				</object>
			</object>
		</object>
		<object type="SeasonTemplateSet" name="objSeasonTemplateSet">
			<object type="SeasonTemplate" name="objSeasonTemplates">
				<property name="strName" value="Spring"/>
				<property name="strIconName" value="Spring"/>
				<property name="sidDisplayName" value="SID.Game.Season.Name.Spring"/>
			</object>
			<object type="SeasonTemplate" name="objSeasonTemplates">
				<property name="strName" value="Summer"/>
				<property name="strIconName" value="Summer"/>
				<property name="sidDisplayName" value="SID.Game.Season.Name.Summer"/>
			</object>
			<object type="SeasonTemplate" name="objSeasonTemplates">
				<property name="strName" value="Fall"/>
				<property name="strIconName" value="Fall"/>
				<property name="sidDisplayName" value="SID.Game.Season.Name.Fall"/>
			</object>
			<object type="SeasonTemplate" name="objSeasonTemplates">
				<property name="strName" value="Winter"/>
				<property name="strIconName" value="Winter"/>
				<property name="sidDisplayName" value="SID.Game.Season.Name.Winter"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Plains"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Plains"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
				<property name="nMoveSpeedPenaltyPct" value="5"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
				<property name="nCombatDefenderResistBonus" value="5"/>
				<property name="nMoveSpeedPenaltyPct" value="10"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Hills"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Hills"/>
			<property name="nRegionUpgradePenalty" value="5"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
				<property name="nCombatDefenderResistBonus" value="5"/>
				<property name="nFoodProductionPenaltyPct" value="25"/>
				<property name="nMoveSpeedPenaltyPct" value="10"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
				<property name="nMoveSpeedPenaltyPct" value="5"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
				<property name="nCombatDefenderResistBonus" value="5"/>
				<property name="nMoveSpeedPenaltyPct" value="15"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Forest"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Forest"/>
			<property name="nRegionUpgradePenalty" value="15"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
				<property name="nCombatDefenderResistBonus" value="5"/>
				<property name="nFoodProductionPenaltyPct" value="25"/>
				<property name="nMoveSpeedPenaltyPct" value="10"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
				<property name="nMoveSpeedPenaltyPct" value="5"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
				<property name="nCombatDefenderResistBonus" value="5"/>
				<property name="nMoveSpeedPenaltyPct" value="15"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Mountains"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Mountains"/>
			<property name="nRegionUpgradePenalty" value="25"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
				<property name="nCombatDefenderResistBonus" value="10"/>
				<property name="nFoodProductionPenaltyPct" value="75"/>
				<property name="nMoveSpeedPenaltyPct" value="50"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
				<property name="nCombatDefenderResistBonus" value="5"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Jungle"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Jungle"/>
			<property name="nRegionUpgradePenalty" value="20"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
				<property name="nCombatDefenderResistBonus" value="7"/>
				<property name="nFoodProductionPenaltyPct" value="50"/>
				<property name="nMoveSpeedPenaltyPct" value="50"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Tundra"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Tundra"/>
			<property name="nRegionUpgradePenalty" value="10"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
				<property name="nCombatDefenderResistBonus" value="5"/>
				<property name="nFoodProductionPenaltyPct" value="50"/>
				<property name="nMoveSpeedPenaltyPct" value="10"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
				<property name="nMoveSpeedPenaltyPct" value="5"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
				<property name="nCombatDefenderResistBonus" value="10"/>
				<property name="nMoveSpeedPenaltyPct" value="40"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Desert"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Desert"/>
			<property name="nRegionUpgradePenalty" value="20"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
				<property name="nFoodProductionPenaltyPct" value="75"/>
				<property name="nMoveSpeedPenaltyPct" value="20"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
			</object>
		</object>
		<object type="TerrainType" name="objTerrainTypes">
			<property name="strTerrain" value="Water"/>
			<property name="sidDisplayName" value="SID.Game.TerrainType.Name.Water"/>
			<object type="TerrainBaseData" name="objTerrainBaseData">
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Spring"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Summer"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Fall"/>
			</object>
			<object type="TerrainSeasonData" name="objTerrainSeasonDatas">
				<property name="strSeason" value="Winter"/>
			</object>
		</object>
		<object type="TransportationLevel" name="objTransportationLevels">
			<property name="nLevel" value="0"/>
			<property name="sidName" value="SID.Game.TransportationLevel.Name.Level0"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="5"/>
		</object>
		<object type="TransportationLevel" name="objTransportationLevels">
			<property name="nLevel" value="1"/>
			<property name="sidName" value="SID.Game.TransportationLevel.Name.Level1"/>
			<property name="nMoveSpeedBonusPct" value="25"/>
			<property name="nResourceProductionBonusPct" value="10"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="10"/>
			<property name="nMaintenanceCost" value="100000"/>
		</object>
		<object type="TransportationLevel" name="objTransportationLevels">
			<property name="nLevel" value="2"/>
			<property name="sidName" value="SID.Game.TransportationLevel.Name.Level2"/>
			<property name="nMoveSpeedBonusPct" value="50"/>
			<property name="nResourceProductionBonusPct" value="15"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="15"/>
			<property name="nMaintenanceCost" value="200000"/>
		</object>
		<object type="TransportationLevel" name="objTransportationLevels">
			<property name="nLevel" value="3"/>
			<property name="sidName" value="SID.Game.TransportationLevel.Name.Level3"/>
			<property name="nMoveSpeedBonusPct" value="100"/>
			<property name="nResourceProductionBonusPct" value="20"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="20"/>
			<property name="nMaintenanceCost" value="300000"/>
		</object>
		<object type="TransportationLevel" name="objTransportationLevels">
			<property name="nLevel" value="4"/>
			<property name="sidName" value="SID.Game.TransportationLevel.Name.Level4"/>
			<property name="nMoveSpeedBonusPct" value="200"/>
			<property name="nResourceProductionBonusPct" value="25"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="25"/>
			<property name="nMaintenanceCost" value="400000"/>
		</object>
		<object type="FortificationLevel" name="objFortificationLevels">
			<property name="nLevel" value="0"/>
			<property name="sidName" value="SID.Game.FortificationLevel.Name.Level0"/>
			<property name="nCombatDefenderResistBonus" value="4"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="5"/>
		</object>
		<object type="FortificationLevel" name="objFortificationLevels">
			<property name="nLevel" value="1"/>
			<property name="sidName" value="SID.Game.FortificationLevel.Name.Level1"/>
			<property name="nCombatDefenderResistBonus" value="8"/>
			<property name="nAAShots" value="1"/>
			<property name="nAAToHit" value="10"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="10"/>
			<property name="nMaintenanceCost" value="100000"/>
		</object>
		<object type="FortificationLevel" name="objFortificationLevels">
			<property name="nLevel" value="2"/>
			<property name="sidName" value="SID.Game.FortificationLevel.Name.Level2"/>
			<property name="nCombatDefenderResistBonus" value="12"/>
			<property name="nAAShots" value="1"/>
			<property name="nAAToHit" value="20"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="15"/>
			<property name="nMaintenanceCost" value="200000"/>
		</object>
		<object type="FortificationLevel" name="objFortificationLevels">
			<property name="nLevel" value="3"/>
			<property name="sidName" value="SID.Game.FortificationLevel.Name.Level3"/>
			<property name="nCombatDefenderResistBonus" value="16"/>
			<property name="nAAShots" value="1"/>
			<property name="nAAToHit" value="30"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="20"/>
			<property name="nMaintenanceCost" value="300000"/>
		</object>
		<object type="FortificationLevel" name="objFortificationLevels">
			<property name="nLevel" value="4"/>
			<property name="sidName" value="SID.Game.FortificationLevel.Name.Level4"/>
			<property name="nCombatDefenderResistBonus" value="20"/>
			<property name="nAAShots" value="1"/>
			<property name="nAAToHit" value="40"/>
			<property name="nCost" value="1000000"/>
			<property name="nSteps" value="25"/>
			<property name="nMaintenanceCost" value="400000"/>
		</object>
		<object type="AgricultureLevel" name="objAgricultureLevels">
			<property name="nLevel" value="0"/>
			<property name="sidName" value="SID.Game.AgricultureLevel.Name.Level0"/>
			<property name="nCostPerMPU" value="300"/>
			<property name="nSteps" value="10"/>
			<property name="nMaintenanceCostPerMPU" value="300"/>
		</object>
		<object type="AgricultureLevel" name="objAgricultureLevels">
			<property name="nLevel" value="1"/>
			<property name="sidName" value="SID.Game.AgricultureLevel.Name.Level1"/>
			<property name="nFoodProductionBonusPct" value="25"/>
			<property name="nCostPerMPU" value="375"/>
			<property name="nSteps" value="15"/>
			<property name="nMaintenanceCostPerMPU" value="375"/>
		</object>
		<object type="AgricultureLevel" name="objAgricultureLevels">
			<property name="nLevel" value="2"/>
			<property name="sidName" value="SID.Game.AgricultureLevel.Name.Level2"/>
			<property name="nFoodProductionBonusPct" value="50"/>
			<property name="nCostPerMPU" value="450"/>
			<property name="nSteps" value="20"/>
			<property name="nMaintenanceCostPerMPU" value="450"/>
		</object>
		<object type="AgricultureLevel" name="objAgricultureLevels">
			<property name="nLevel" value="3"/>
			<property name="sidName" value="SID.Game.AgricultureLevel.Name.Level3"/>
			<property name="nFoodProductionBonusPct" value="75"/>
			<property name="nCostPerMPU" value="525"/>
			<property name="nSteps" value="25"/>
			<property name="nMaintenanceCostPerMPU" value="525"/>
		</object>
		<object type="AgricultureLevel" name="objAgricultureLevels">
			<property name="nLevel" value="4"/>
			<property name="sidName" value="SID.Game.AgricultureLevel.Name.Level4"/>
			<property name="nFoodProductionBonusPct" value="100"/>
			<property name="nCostPerMPU" value="600"/>
			<property name="nSteps" value="30"/>
			<property name="nMaintenanceCostPerMPU" value="600"/>
		</object>
		<object type="DifficultyLevelSet" name="objDifficultyLevelSet">
			<object type="DifficultyLevel" name="objDifficultyLevels">
				<property name="nLevel" value="1"/>
				<property name="sidDisplayName" value="SID.Game.DifficultyLevel.Name.Easiest"/>
				<property name="nAIProductionModifier" value="-30"/>
			</object>
			<object type="DifficultyLevel" name="objDifficultyLevels">
				<property name="nLevel" value="2"/>
				<property name="sidDisplayName" value="SID.Game.DifficultyLevel.Name.Easy"/>
				<property name="nAIProductionModifier" value="-15"/>
			</object>
			<object type="DifficultyLevel" name="objDifficultyLevels">
				<property name="nLevel" value="3"/>
				<property name="sidDisplayName" value="SID.Game.DifficultyLevel.Name.Normal"/>
				<property name="nAIProductionModifier" value="0"/>
			</object>
			<object type="DifficultyLevel" name="objDifficultyLevels">
				<property name="nLevel" value="4"/>
				<property name="sidDisplayName" value="SID.Game.DifficultyLevel.Name.Hard"/>
				<property name="nAIProductionModifier" value="50"/>
			</object>
			<object type="DifficultyLevel" name="objDifficultyLevels">
				<property name="nLevel" value="5"/>
				<property name="sidDisplayName" value="SID.Game.DifficultyLevel.Name.Harder"/>
				<property name="nAIProductionModifier" value="100"/>
			</object>
			<object type="DifficultyLevel" name="objDifficultyLevels">
				<property name="nLevel" value="6"/>
				<property name="sidDisplayName" value="SID.Game.DifficultyLevel.Name.Hardest"/>
				<property name="nAIProductionModifier" value="200"/>
			</object>
		</object>
		<object type="OwnerPenaltySet" name="objOwnerPenaltySet">
			<object type="OwnerPenalty" name="objOwnerPenalties">
				<property name="ePenaltyType" value="OWNER_PENALTY_OWNER"/>
			</object>
			<object type="OwnerPenalty" name="objOwnerPenalties">
				<property name="ePenaltyType" value="OWNER_PENALTY_NOT_OWNER"/>
				<property name="nProductionPenalty" value="50"/>
			</object>
		</object>
		<object type="CulturePenaltySet" name="objCulturePenaltySet">
			<object type="CulturePenalty" name="objCulturePenalties">
				<property name="ePenaltyType" value="CULTURE_PENALTY_CULTURE"/>
			</object>
			<object type="CulturePenalty" name="objCulturePenalties">
				<property name="ePenaltyType" value="CULTURE_PENALTY_NOT_CULTURE"/>
				<property name="nProductionPenalty" value="25"/>
			</object>
		</object>
		<object type="RegionSizeUpgradePenaltySet" name="objRegionSizeUpgradePenaltySet">
			<object type="RegionSizeUpgradePenalty" name="objUpgradePenalties">
				<property name="nMinSize" value="0"/>
				<property name="nMaxSize" value="10000"/>
			</object>
			<object type="RegionSizeUpgradePenalty" name="objUpgradePenalties">
				<property name="nMinSize" value="10001"/>
				<property name="nMaxSize" value="50000"/>
				<property name="nPenalty" value="5"/>
			</object>
			<object type="RegionSizeUpgradePenalty" name="objUpgradePenalties">
				<property name="nMinSize" value="50001"/>
				<property name="nMaxSize" value="100000"/>
				<property name="nPenalty" value="10"/>
			</object>
			<object type="RegionSizeUpgradePenalty" name="objUpgradePenalties">
				<property name="nMinSize" value="100001"/>
				<property name="nMaxSize" value="500000"/>
				<property name="nPenalty" value="20"/>
			</object>
			<object type="RegionSizeUpgradePenalty" name="objUpgradePenalties">
				<property name="nMinSize" value="500001"/>
				<property name="nPenalty" value="25"/>
			</object>
		</object>
	</object>
</objects>
